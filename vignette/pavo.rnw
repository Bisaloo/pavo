\documentclass{article}

% Definitions
\newcommand{\pavo}{{\tt pavo}}  % you can use \pavo{} to print pavo as package
\newcommand{\code}[1]{{\tt #1}}  % way to plot out code
\setlength{\parindent}{0in}
\setlength{\parskip}{.1in}
\setlength{\textwidth}{140mm}
\setlength{\oddsidemargin}{10mm}
\usepackage{amsmath}
\usepackage{hyperref}

\begin{document}

\SweaveOpts{concordance=TRUE, prefix.string=pavo}

<<echo=FALSE, results=hide>>=
library(ggplot2)
library(pavo)
ps.options(pointsize=12)
options(width=60)
@

\title{\pavo{}: {\bf P}erceptual {\bf A}nalysis, {\bf V}isualization and {\bf O}rganization of Color Data in R}
\author{Rafael Maia, Paul-Pierre Bitton, Chad Eliason}

\maketitle

\section*{Introduction}

\pavo{} is an R package developed with the goal of establishing a flexible and integrated 
workflow for working with spectral color data. It includes functions that take advantage of
new data classes in order to work seamlessly from importing raw data to visualization and 
analysis.

Although \pavo{} deals largely with spectral reflectance data from bird feathers, it is meant 
to be applicable for a range of taxa and applications. It provides flexible ways to input
spectral data from a variety of equipment manufacturers, process these data, extract variables 
and produce publication-quality graphics.

\pavo{} was written with the following workflow in mind:

% numbered list of things
\begin{enumerate}
\item {\bf Organize} spectral data by inputting files, processing spectra (e.g., to remove
noise, negative values, smooth curves, etc.)
\item {\bf Analyze} the resulting files, either using typical tristimulus color variables (hue,
saturation, brightness) or using visual models based on perceptual data from the taxon of 
interest.
\item {\bf Visualize} the output, with multiple options provided for exploratory analyses.
\end{enumerate}

Below we will show the main functions in the package in an example workflow. 

\section{Data Description}

The data used in this example is available from 
\href{https://github.com/rmaia/pavo/blob/master/vignette_data/vignette_data.zip}
{github by clicking here}. 
You can download and extract it to follow the vignette.

The data consists of reflectance spectra obtained using Avantes equipment and software from 
seven bird species: Northern Cardinal (\emph{Cardinalis cardinalis}), Wattled Jacana (\emph{Jaca
na jacana}), Baltimore Oriole (\emph{Icterus galbula}), Peach-fronted Parakeet (\emph{Aratinga 
aurea}), American Robin (\emph{Turdus migratorius}),  and Sayaca Tanager 
(\emph{Thraupis sayaca}). Several individuals were measured (sample size varies by species), and 
3 spectra were collected from each individual.

The samples do not have the same sample sizes and have additional peculiarities that should 
emphasize the flexibility \pavo{} offers, as we'll see below.

\section{Organizing and Processing Spectral Data}

\subsection{Importing Data}

The first thing we need to do is import the spectral data into R using the funciton 
\code{getspec()}. Since the spectra were obtained using Avantes software, we will need to 
specify that the files have the "\code{.ttt}" extension. Further, the data is organized in 
subdirectories for each species. \code{getspec} does recursive sampling, and may include the 
names of the subdirectories in the spectra name if desired. A final issue with the data is that 
it was collected using a computer with international numbering input, which means it uses commas 
instead of periods as a decimal separator. We can specify that in the function call.

I have downloaded the file and placed it in a directory called 
"\nolinkurl{/github/pavo/vignette_data}". By default, \code{getspec} will search for files in 
the default folder, but a different one can be specified:

<<cache=true>>=
specs <- getspec("~/github/pavo/vignette_data/", ext="ttt", decimal=",", 
                 subdir=T, subdir.names=F)
specs[1:10,1:4]
dim(specs) #data has 214 spectra, from 300 to 700 nm
@

When \pavo{} imports spectra, it creates an object of class \code{rspec}, which inherits attributes from the \code{data.frame} class:
<<>>=
is.rspec(specs)
@

If you already have multiple spectra in a single data frame that you'd like to use with \pavo{} 
functions, you can use the command \code{as.rspec} to convert it to an rspec object. The 
function will attempt to identify the wavelength variable or, if it doesn't have one, it can be 
specified in the function call.

\subsection{Processing Data}

\subsection{Averaging Spectra}

As previously described, our data constitutes of multiple individuals, and each was measured 
three times, as is common in order to avoid measurement bias. A good way to visualize the 
repeatability of our measurements is to plot the spectra of each individual separately. The 
function \code{explorespec} provides an easy way of doing so. You may specify the number of 
spectra to be plotted in the same panel using the argument \code{specreps}, and the function 
will adjust the number of panels per page accordingly. We will exemplify this function using 
only 10 of the cardinal individuals measured:

<<label=explorespecfig, fig=TRUE, include=FALSE, cache=T>>=
explorespec(specs[,1:40], specreps=3) 
# 39 spectra plus the first (wl) column
@

\begin{figure} % h=here, t=top, b=bottom, p=floating page
\begin{center}
\includegraphics[width=5in]{pavo-explorespecfig}
\end{center}
\caption{Result from \code{explorespec}, showing the three measurements for each individual in separate panels}
\label{fig1}
\end{figure}

\clearpage{}

So our first step would be to take the average of each of these three measurements in order to 
obtain average individual spectra to be used in further analyses. The function \code{aggspec} 
does this. The \code{by} argument can be either a number (specifying how many specs should be 
averaged for each new sample) or a vector specifying the identities of the spectra to be 
combined (see below):

<<>>=
mspecs <- aggspec(specs, by=3, FXN=mean)
mspecs[1:5, 1:4]
dim(mspecs) #data now has 72 spectra, one for each individual
@

Now we'll use the \code{aggspec} function again, but this time to take the average spectrum for 
each species. However, each species has a different number of samples, so we can't use the 
\code{by} argument as before. Instead we will use regular expressions to create a species name 
vector by removing the numbers that identify individual spectra:

<<>>=
# create a vector with species identity names
spp <- gsub('\\.[0-9].*$','',names(mspecs))[-1]
table(spp)
@

Instead, we are going to use the \code{spp} vector we created to tell the \code{aggspec} 
function how to average the spectra in \code{mspec}:

<<label=exploresppmeans, fig=TRUE, include=FALSE, cache=TRUE>>=
sppspec <- aggspec(mspecs, by=spp, FXN=mean)
sppspec[1:5, ]
explorespec(sppspec, 7)
@

\begin{figure}[h] % h=here, t=top, b=bottom, p=floating page
\begin{center}
\includegraphics[width=4in]{pavo-exploresppmeans}
\end{center}
\caption{Result from \code{explorespec} for species means}
\label{fig2}
\end{figure}


\section{Visualizing Spectral Data}

<<label=overlay,fig=TRUE,include=FALSE>>=
data(sicalis)
par(mfrow=c(1,2))
plot(sicalis, type='o', col=spec2rgb(sicalis))
plot(procspec(sicalis, opt='smooth'), type='o', col=spec2rgb(sicalis))

#plot(sicalis, type='s', col=spec2rgb(sicalis))
@



\begin{figure} % h=here, t=top, b=bottom, p=floating page
\begin{center}
\includegraphics[width=4in, height=3in]{pavo-overlay}
\end{center}
\caption{Overlay plot with colors calculated from human color matching functions}
\label{figure:overlay}
\end{figure}

Colors can be mapped to spectra using \code{spec2rgb} as shown in 
Figure \ref{figure:overlay}.


\section{Analyzing Spectral Data}

\subsection{Overview}

\pavo{} offers two main approaches for spectral data analysis. First, variables can be 
calculated based on the shape of the reflectance spectra. By using special R classes for spectra 
data frame objects, this can easily be done using the \code{summary} function in an rspec 
object (see below). The second function for spectral shape analysis is \code{peakshape}, which returns descriptors for peaks in spectral curves, as outlined below.

Second, reflectance spectra can be analyzed accounting for the visual system receiving the color 
signal, therefore representing reflectance spectra as preceived colors. We have implemented 
Endler's (REF) segment analysis model, which approximates visual models but does not directly 
use sensory information; the model of Osorio \& Vorobyev (REF), which provides a flexible 
framework for visual modeling; and the tetrahedral color space (GOLDSMITH, ENDLER, STODDARD) 
which has been extensively developed to represent colors in the avian vision color space.

\subsection{Spectral Shape Analysis}

\textit{\textbf{Trichromatic variables}}

Obtaining trichromatic color variables (related to hue, saturation and value) is pretty
straightforward in \pavo{}. Since reflectance spectra is stored in an object of class 
\code{rspec}, the \code{summary} function recognizes the object as such and extracts 23 
variables, as outlined in MONTGOMERIE. Though outlined in a book chapter on bird coloration, 
these variables are broadly applicable to any reflectance data, particularly if the taxon of 
interest has color vision within the UV-human visible range.

The description and formulas for these variables can be found in Table \ref{table:tristim}.

<<>>=
summary(sppspec)
@


% A table for filling in Montgomerie's color variables
\begin{table}[h]
\begin{center}
\begin{tabular}{l l l} \hline
{\bf Color} & \\
{\bf Variable} & {\bf Equation} & {\bf Description} \\ 
\hline
\code{B1} & {$\sum_{\lambda={300}}^{700} R_\lambda$} & \parbox[t]{3in}{Total brightness, total reflectance}  \\
\code{B2} & {$B_\text{1}/n_\text{wl}$} & \parbox[t]{3in}{Mean brightness.} \\
\code{B3} & {$R_\text{max}$} & \parbox[t]{3in}{Intensity.} \\
\code{S1} & {} & \parbox[t]{3in}{Chroma, spectral purity.} \\
\code{S2} & {$R_\text{max}/R_\text{min}$} & \parbox[t]{3in}{Spectral saturation} \\
\code{S3} & {} & \parbox[t]{3in}{} \\
\code{S4} & {} & \parbox[t]{3in}{} \\
\code{S5} & {} & \parbox[t]{3in}{} \\
\code{S6} & {} & \parbox[t]{3in}{} \\
\code{S7} & {} & \parbox[t]{3in}{} \\
\code{S8} & {} & \parbox[t]{3in}{} \\
\code{S9} & {} & \parbox[t]{3in}{} \\
\code{S10} & {} & \parbox[t]{3in}{} \\
\code{H1} & {$\lambda_\text{Rmax}$} & \parbox[t]{3in}{Hue: wavelength of peak reflectance} \\
\code{H2} & {} & \parbox[t]{3in}{} \\
\code{H3} & {} & \parbox[t]{3in}{} \\
\code{H4} & {} & \parbox[t]{3in}{} \\
\code{H5} & {} & \parbox[t]{3in}{} \\
\hline
\end{tabular}
\end{center}
\caption{\label{table:tristim}
The complete set of tristimulus variables calculated by \code{summary} in \pavo{}}
\end{table}

Color variables described in Table \ref{table:tristim}.

blah blah blah\footnote{some footnote text here} and also this.

\textit{\textbf{Peak shape descriptors}}

Particularly in cases of reflectance spectra that have a single, discrete peak, it mmight be useful to obtain variables that describe that peak's properties. 


\section*{Examples}


<<label=fig1, fig=TRUE, include=FALSE>>=
hist(rnorm(50))
@


\subsection*{More examples}

Some more examples:

\bibliography{}

\end{document}