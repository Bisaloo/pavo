%ScholarOne also provide the following basic guidelines for uploading a LaTeX formatted manuscript:
%1.  Always upload the main LaTeX file first, selecting the file designation of Main Document.
%2.  Then, upload each file that is related to the main .TEX file and is needed for processing, selecting the file designation of TeX/LaTeX Suppl File.
%3.  Be sure to upload all style sheets, reference files, and at least one bibliography file, that are part of the document.
%4.  All image files must be saved and uploaded in .EPS format in order for the file to properly format and convert.
%5.  If changes are made to the main LaTeX document after all of the related files have been uploaded, all supplementary LaTeX files will have to be removed and re-uploaded.


\documentclass[times,mee,doublespace]{besauth}

\usepackage{hyperref}
\usepackage{lineno}
\usepackage{float}
\usepackage{subcaption}

% Macros
\newcommand{\pavo}{{\tt pavo}}  
\newcommand{\code}[1]{{\tt #1}}

\begin{document}
\SweaveOpts{concordance=TRUE, prefix.string=fig/ms}

%%%%%%%%%%%%
%TITLE PAGE%
%%%%%%%%%%%%
\linenumbers

\runningheads{R. Maia \textit{et al.}}{\pavo{}: R package for color analysis}

\papertype{Application}

\title{\pavo{}: an R package for the perceptual analysis, visualization and organization of spectral color data}

\author{Rafael Maia\affil{1}\corrauth\, Chad M. Eliason\affil{1}, Pierre-Paul Bitton\affil{2}, St\'{e}phanie M. Doucet\affil{2} and Matthew D. Shawkey\affil{1}} 

\address{\affilnum{1}Department of Biology, Integrated Bioscience Program, University of Akron, Akron, OH 44325- 3908, USA.; and \affilnum{2}Department of Biological Sciences, 401 Sunset Avenue, Biology Building, University of Windsor, Windsor, Ontario, Canada, N9B 3P4.}

\corraddr{rm72zips.uakron.edu}

%\cgs{grant sponsor name (no number)}
%\cgsn{grant1{1}, grant2{2}}{123, 456}

\begin{abstract}
\begin{enumerate}
\item Recent advances in portable spectrophotometry and in animal visual psychophysiology has led 
to an increasing interest in the studies of colors in general, and in modelling species-specific color
perception. Despite this growing interest, a unified framework for analyzing spectral data is still lacking.
\item We introduce \pavo{}, an R packgage that facilitates the organization, visualization, and analysis
of spectral data in a cohesive framework. \pavo{} is highly flexible: it can organize and manipulate 
data from a variety of sources, implements easy to use visualization tools, provides many analytical
capabilities, and allows the modelling of visual systems of any vertebrate and (almost all) invertebrates.
\item In this paper, we present a summary of the \pavo{} functions that will be of general interest, 
and suggest a workflow to explore spectral data, and model colors using a user-defined visual systems.
\item We also present an example, using spectral data obtained from Starling museum skins, of the 
flexibility of the package.
\item \pavo{} provides a unique environment capable of tackling complex sensory ecology questions
which previously required the use of various, sometimes costly and proprietal, software and programs. 
\end{enumerate}
\end{abstract}

\keywords{tetrachromatic, trichromatic, dichromatic, spectrophotometry, visual model, colorspace,
tristimulus, just noticeable differences, signal, sensory ecology}

\maketitle

%<<echo=FALSE, results=hide>>=
%library(pavo)
%ps.options(pointsize=12)
%options(width=60)
%@

\section{Introduction}

The role that coloration and color vision plays in animal communication has been a fundamental
question in evolutionary biology for centuries \citep{darwin:1859,darwin:1896,
Poulton:1890,Bennett:2007hm}. Visual communication has provided an unique opportunity to investigate
aspects of natural selection \citep{Chittka:1992} and sexual selection \citep{Boughman:2002, Maan:2006, 
Seehausen:2008}, and how these interact \citep{Kemp:2009}. It it also an
ideal system for truly integrative biological research, from the optical processes generating color (REF),
hormonal and genetic mechanisms regulating this expression \citep{Leskinen:2012, Muller:2009}, physiological
processes involved in preceiving the signal (REF), and its adaptive and evolutionary patterns 
\citep{Badyaev:2003,Darst:2006}.

However, ``color'' refers to a sensory experience, not an objective quantity, and the realization
that animals can vary quite considerably in their visual system and how they process this
information prompted two important methodological advances. First, it highlighted the need for an
objective quantification of the color reflected by surface, as a first approximation of an
``receiver-independent'' objective quantification of an organism or object's color
\citep{Endler:1993wm,Eaton:2003,Bennett:2007hm}. Over the last couple of decades, the popularization of
portable spectrophotometers that can measure reflectance across and beyond the human visible 
wavelength range, have opened the possibility of quantifying the spectral properties of animal and
plant integuments \citep{Endler:1990,Eaton:2003,Andersson:2006}. Second, advances in the
understanding of how animals preceive and process color have allowed the combinination of information on
receiver psychophysiology and reflectance data in visual models to estimate how animals see and
differentiate these colors \citep{Goldsmith:1990,Tovee:1995vv,Vorobyev:1998,Vorobyev:1998to}.

Despite these advances, a cohesive framework for working with and analyzing color from reflectance
data is still limited from a practical standpoint. Data collection software from spectrophotometer
manufacturers are not standardized, producing inconsistent output files, and software for analyses
are either restricted in the methods implemented, in the capabilities to import and process data, or
rely on proprietary and/or closed software \citep[reviewed in][]{Montgomerie:2006}PPB - SHOULD WE 
ALSO INCLUDE AVICOL AS EXAMPLE??. Color data will further require additional converting and exporting 
into statistical software for analyses, thus
restricting the standarization of protocols, as well as batch processing and automation of
workflows. Combined with published descriptions that are often poorly detailed or inconsistent, the
current procedures and implementations severely hinder the reproducibility of research and the
reimplementation of methods. \textbf{(extracted from a paper, would like to include similar message:
``These factors lead to duplicated effort, bespoke solutions that are difficult to apply to future
analyses and results that are hard, if not impossible, to reproduce exactly.'')}

We introduce \pavo{} \textendash \; a package for R \citep{rcore} that tackles these problems by
providing a flexible, yet cohesive, environment in which researchers can organize, analyze and
visualize colour data generated by spectrophotometry. R is rapidly becoming the working language for
scientific programming and data analysis, particularly in ecology and evolution
\citep[e.g.][]{ape,Bolker:2008}. \pavo{} incorporates R's flexibility by using object classes that
can seamlessly interpret each other, providing functions that can intuitively be used to import,
explore, process and analyze spectral color data under a variety of user defined models. We propose
that, by combining these procedures under a coherent framework not only streamlines workflow, but
also allows data to be explored and manipulated in ways that can be used to visualize patterns,
obtain information and develop hypothesis that may otherwise pass unnoticed (WORKFLOW FIGURE HERE).

\section{The \pavo{} package}

The stable release of \pavo{} is available from CRAN (\url{http://cran.r-project.org/}) for direct
installation from R, and the development version is available from github
(\url{https://github.com/rmaia/pavo}). \pavo{} was developed with three main workflow stages in mind
(FIGURE): \textbf{organization} of spectral data by inputting raw files and processing their
spectral content; \textbf{visualization} of the output, including exploratory capacities to identify
further required manipulations and previously unconsidered patterns; and \textbf{analysis} of data
from the spectral shape of reflectance curves or by incorporating receiver psychophysiology in
visual models. As noted by \cite{Bennett:2007hm} and others \citep{Andersson:2006,
Montgomerie:2006}, though spectral data has become commonplace in studies of animal coloration, it
is easy to obtain poor-quality or inaccurate data. Therefore a workflow for spectral color data
analysis has to go beyond plugging in values and expecting an output, requiring thorough exploratory
investigation. With this in mind, \pavo{} takes advantage of the object-oriented programming
environment in R which is ideal for such approach, as outlined below.

\subsection{Data Format}

Spectral data is stored in \pavo{} and recognized by its function by use of a new object class,
\code{"rspec"}, which inherits methods from \code{data.frame}. \code{rspec} objects are
characterized by having individual reflectance spectra as columns of the dataframe, with a first
column containing the wavelength identification data. Raw spectral data can be imported using the
function \code{getspec}, which currently supports data from a variety of spectrometer and
microspectrometer models (Ocean Optics OOIBase and SpectraSuite files, Avantes AvaSpec, and CRAIC).
In addition, previously compiled data frames can be imported to R and converted to \code{rspec}
objects using the \code{as.rspec} function.

The use of dedicated R object classes allows generic functions such as \code{plot} and
\code{summary} to identify the data as a particular type of data frame and interpret it accordingly
(see below). The class \code{"vismodel"} is used to interpret spectral data that has been
processed through one of the visual models implemented, and also stores information on how it was
generated (e.g. the visual phenotype, background and illuminant used, and any transformations applied; see
below). Additionally, the \code{"tcs"} class refers to tetrahedral colorspace models
\citep{Endler:2005,Stoddard:2008}.

It is common when collecting spectral data to take multiple measurements from the same sample,
averaging these to avoid sampling error \citep{Quesada:2006}. \code{pavo} provides the
\code{aggspec} function for this, as well as the \code{procspec} function for noise removal via
smoothing, and transformations to standardize and clean spectral data.

\subsection{Visualization}

With \pavo{} installed and loaded, the \code{plot} function recognizes \code{rspec} objects and
plots them accordingly \textendash \; interpreting the first column as wavelengths (and usually
using it as the x axis) and the remaining columns as reflectance values (y values) for individual
spectra. Several plotting options for multiple spectra are implemented (FIGURE). In addition, the
\code{aggplot} function provides plotting capabilities for among-spectra summary statistics plotting
(FIGURE), with a similar syntax to \code{aggspec}. \pavo{} also offers exploratory plotting
capabilities that can be combined with data processing and formatting, such as \code{explorespec}
(for visualizing groups of spectra) and \code{smoothplot} (for choosing smoothening parameters).

Finally, \pavo{} offers plotting capabilities for the avian tetrachromatic colorspace model
\citep{Stoddard:2008, Endler:2005} through the \code{tcsplot} and \code{projplot} functions (FIGURE,
see below).

\subsection{data analysis}

The \code{summary} function can be applied to \code{rspec} objects to produce several tristimulus
(hue, saturation and brightness) color variables extracted from the spectral shape of the
reflectance curve. This function calculates several variables from the literature \citep[described
in]{Montgomerie:2006} for the spectra contained in the \code{rspec} input object (description and
formulae for the variables can be found in the help file, by typing \code{?summary.rspec}, and in
the package Vignette \textendash \; see Supporting Information). Additionally, the function
\code{peakshape} provides descriptors of spectral peaks, such as the wavelenth of maximum
reflectance and the full width at half maximum (REF - CHAD?), and can be fine-tuned to extract
information from specific areas of the curve, which can be useful when the spectral curve has
multiple peaks or a complex shape (e.g. describing the UV peak of carotenoid curves -- FIGURE?)

\pavo{} also allows the easy production of models that incorporate the visual system of the receiver in
describing colors through the \code{vismodel} function. Models can be calculated incorporating the visual
phenotype (cone absorbance), background color, and ambient illuminant \citep{Vorobyev:1998}. Several
avian receptor phenotypes \citep{Hart:2001,Endler:2005} are implemented as options, but user-defined
receptor data from any taxon can be used as model input. Further, the \code{sensmodel} function
implements the calculation of cone absorbance curves based on peak sensitivity information
(available from the literature, e.g. REF), and can also include oil droplet and retinal transmission
information in the calculations \citep{Govardovskii:2000,Hart:2005}.

Visual models can be calculated in terms of absolute photon catches, in which case the receptor
noise model can be used to infer contrast between colors \citep[implemented in the function
\code{colordist}]{Vorobyev:1998} or in relative cone stimulation, in which case the model reduces to
a colorspace model represented in $n-1$ dimensions \citep[where $n$ is the number of different
receptors involved in color vision][]{Goldsmith:1990,Endler:2005,Stoddard:2008}. This can be
selected by the logical argument \code{relative} from the \code{vismodel} function. In the case of
the avian tetrahedral colorspace, several additional variables can be calculated based on spherical
coordinates which represent the hue based on the angles (MORE INFO, CHAD) and saturation based on
the distance from the achromatic center \citep{Stoddard:2008} by calling the \code{tcs} function.
This function generates an object of class \code{tcs}; a \code{summary} call from a \code{tcs}
object will return summary statistics described in \cite{Stoddard:2008} for sets of points, such as
the color span and color volume.

\subsection{Volume Overlap and Fechner's law in the Tetrahedral Colorspace Model}

\pavo{} also builds upon previosuly described visual model methods. For example, \cite{Stoddard:2011}
present the useful approach of calculating the overlap between the volumes defined by two sets of
points in colorspace. They used this metric to quantify the mimicry of nest parasite eggs to their hosts,
such that a greater overlap of the volumes would indicate greater overall color similarity. Given the
complexity of calculating the intersection of three-dimensional convex hulls
\cite{Stoddard:2011} used a Monte Carlo approach to estimate the degree of overlap of the volumes.
\pavo{},instead, provides the exact solution for the calculation of the intersection of color volumes,
using a method originally implemented to calculate the overlap between multidimensional niche 
\citep{Villeger:2011} through the computational geometry capabilities available from the \code{rcdd}
package \citep{rcdd}.

Finally, we have addressed previously identified methodological inconsistencies in adapting visual
models to the tetrahedral colorspace. For example, \cite{Endler:2005} recommends log-transforming
photon catches before defining the colorspace (PPB - NOT SURE WHAT THIS MEANS! by them relative sum to 
1), thus making the difference between stimuli proportional to their magnitude \citep[i.e. following
Fechner's law; see
also][]{Vorobyev:1998,Endler:1990}. However, \cite{Stoddard:2008} evaluated the consequences of
this transformation and noted dramatic and unpredictable effects in hue and chroma values. Though
the decrease in hue variance and an overall decrease in chroma values should be expected by the 
log-transformation, the unpredictable effects on hue noted by \cite{Stoddard:2008} is troublesome. As
the authors noted \citep[see][Supplemental Information]{Stoddard:2008}, this is largely a result of
normalizing all input functions (reflectance, sensitivity, background and illuminant) to integrals
of 1, which yield cone stimulations ($Q_i$ for the cone class $i$) that scale from 0 to 1. 
Log-transforming these $Q_i$ values ($f_i = log(Q_i)$) results in negative numbers, which if made
relative by dividing by the sum (i.e. $f_{i\;relative} = f_i / \sum{f_i}$) results in the greatest
\textit{absolute} $f_i$ value (i.e. the ``most negative'' and thus smallest) being the greatest
$f_{i\;relative}$ value \textendash \; for example, $-0.5 > -5$, but $\frac{-0.5}{-5.5} <
\frac{-5}{-5.5}$. \cite{Stoddard:2008} note that this can be dealt with by scaling photon catch
values by a large value, but this is arbitrary and can result in the loss of relative scale
differences. Instead, we propose the following transformation for log-transformed photon catches
($fi$), implemented in \pavo{} when \code{vismodel} is executed with the option
\code{relative=TRUE}:

\begin{equation}
f_{i\;relative} = \frac{(f_i - \sum{f_i})}{\sum{(f_i - \sum{f_i})}}
\end{equation}

which preserves measurement scale but still yields hue values that are consistent with original
values, but with differences that are a linear function of their magnitude as expected from
Fechner's law (FIGURE?).

\section{Example: Colourspace divergence in African starlings (Sturnidae)}

Recent phylogenetic evidence indicates a very recent divergence for \emph{L. chloropterus} and
\emph{L. elisabeth} compared to the node containing the outgroup \emph{L. acuticaudus}
(\cite{rubenstein}). Given the lability of iridescent plumages (\cite{}) and potential to produce
colours across the bird-visible range of wavelengths, plumage colouration may play a role in
reproductive isolation \cite{Seehausen 1999}. By analyzing plumage patches within an avian
colourspace (see \cite{}) we can better understand the physisiologically relevant divergence in
plumage colour among these focal species. Here we demonstrate some of the capabilities of \pavo{} by
analyzing this example dataset.

<<echo=F,results=hide>>=
require(RColorBrewer)
require(pavo)
source('~/github/pavo/R/aggspec.R')
pal <- brewer.pal(7, "Set1")
pal2 <- brewer.pal(11, "Spectral")
@

\subsection{Step 1: Organization}

The data consist of reflectance spectra (in Avantes `.ttt' output format) taken from museum
specimens of three species within the monophyletic African starling clade (Sturnidae):
\emph{Lamprotornis elisabeth}, \emph{Lamprotornis chloropterus} and \emph{Lamprotornis acuticaudus}.
We measured three reflectance spectra per plumage patch (n=11, see Figure \ref{figure:distplot} for
list) per individual (n=4, males only). We loaded and averaged 396 raw spectral data files by
individual using the following two lines of code in \pavo{}:

% demo input of raw data
<<echo=TRUE,results=hide,eval=FALSE>>=
specs <- getspec(where = '~/Desktop/starlingdata', ext = 'ttt', lim = c(300, 700))
specs <- aggspec(specs, by = 3, FUN = mean)
@

<<echo=FALSE, results=hide>>=
load('~/github/pavo/toydata/ACE.RData')
specs <- as.rspec(cbind(eliz, chlo[,-1], acut[,-1]))
# Create metadata
spp <- sapply(strsplit(names(specs), "\\."), "[", 1)
ids <- sapply(strsplit(names(specs), "\\."), "[", 2)
sex <- sapply(strsplit(names(specs), "\\."), "[", 3)
patch <- sapply(strsplit(names(specs), "\\."), "[", 4)
# Get equal sample sizes by sampling randomly from L. chloropterus, L. acuticaudus
set.seed(101)
p <- sample(unique(ids[spp=="LAAC"&sex=="MAL"]), size = 4)
acut.sub <- cbind(wl = 300:700, specs[, ids%in%p])
acut.sub <- as.rspec(acut.sub)
set.seed(101)
p <- sample(unique(ids[spp=="LACL"&sex=="MAL"]), size=4)
chlo.sub <- cbind(wl = 300:700, specs[, ids%in%p])
chlo.sub <- as.rspec(chlo.sub)
# Get only males from L. elisabeth
eliz.sub <- eliz[, grep('MAL', names(eliz))]  # get only males
eliz.sub <- as.rspec(cbind(wl = 300:700, eliz.sub))
# Combine subsetted rspec objects
specs <- as.rspec(cbind(eliz.sub, chlo.sub[,-1], acut.sub[,-1]))
spp <- sapply(strsplit(names(specs), "\\."), "[", 1)
ids <- sapply(strsplit(names(specs), "\\."), "[", 2)
sex <- sapply(strsplit(names(specs), "\\."), "[", 3)
patch <- sapply(strsplit(names(specs), "\\."), "[", 4)
@

\subsection{Step 2: Visualization and processing}

Next, we plotted spectra contained in this \code{rspec} object using \code{plot(specs)} and removed the observed electrical noise arising from the spectrometer using \code{procspec(specs, opt='smooth')}. We then used \code{aggplot(specs, by='spp')} to visualize the mean reflectance curves for each species for body patches `belly' and `cheek' (see Figure \ref{figure:specsplot}).

<<label=specsplot,fig=TRUE,include=FALSE,echo=F,results=hide,width=6.5,height=3.1>>=
# Process spectra (apply smoothing) and average by species and patch
specs.sm <- procspec(specs, opt='smooth')
specs.m <- aggspec(specs.sm, by = paste(spp, patch)[-1])
spp.m <- sapply(strsplit(names(specs.m), "\\."), "[", 1)
sex.m <- sapply(strsplit(names(specs.m), "\\."), "[", 3)
patch.m <- sapply(strsplit(names(specs.m), "\\."), "[", 4)
# Plot results using aggplot
par(mfrow=c(1,2), mar=c(4,4,2,2), ps=10, oma=c(0,0,0,0), lwd=1)
p <- grep('belly', names(specs))
aggplot(specs.sm[,c(1,p)], by=substr(names(specs.sm)[p], 1, 4), alpha=.05, lwd=2)
p <- grep('cheek', names(specs.sm))
aggplot(specs.sm[,c(1,p)], by=substr(names(specs.sm)[p], 1, 4), alpha=.05, lwd=2)
@

\begin{figure}[H]
\centering
\includegraphics{fig/ms-specsplot}
\caption{Plots of mean smoothed spectra for different body patches (belly, left; cheek, right). Line 
colours indicate species (red, \emph{L. acuticaudus}; blue, \emph{L. chloropterus}; green, \emph{L.
elisabeth}).}
\label{figure:specsplot}
\end{figure}


\subsection{Step 3: Analysis}

To understand how spectral curves are perceived by birds, we used the \code{vismodel} function to
map these data to physiological analogues based on visual sensitivies (sensory phenotype). \pavo{}
incorporates available data on the retinal sensitivies of numerous taxa, including the European
starling (\emph{Sturnus vulgaris}, code{visual = `star'}), which we incorporated here (see
\cite{Hart:1998}).

We also used \code{relative = FALSE} to calculate raw \{\emph{usml}\} values, suitable for calculating
chromatic distances with the function \code{coldist} \cite{}. Data on relative cone abundances and
XX are easily implemented by passing published values to the \code{coldist} function. Relative UVWS,
SWS, MWS and LWS cone densities taken from \cite{Hart:1998} and \code{v} was set to 0.1 to give a
LWS conde Weber fraction of 0.05 (e.g., see \cite{}). The results of \code{coldist} give colour
distance between all possible combinations of plumage patches in the \code{tcs} object, and can be
further subsetted to only analyse comparisons of interest (e.g., colour difference between
\emph{Lamprotornis elisabeth} and \emph{L. chloropterus}). We plot pairwise distances between
plumage patches for all species combinations in Figure \ref{figure:distplot}.

<<echo=FALSE,results=hide>>=
# 5. Run visual models using starling visual sensitivies
# vm1 <- vismodel(specs.m, visual='star', relative=TRUE)
vm1 <- vismodel(specs, visual = 'star', relative = TRUE)
vm2 <- vismodel(specs, visual = 'star', relative = FALSE)
@

<<echo=FALSE,results=hide>>=
# Calculate chromatic pairwise distances between patches (delta S)
delta.S <- coldist(vm2, qcatch = 'fi', n1 = 1, n2 = 1.38, n3 = 3.34, n4 = 3.46, v = 0.1)
# Calculate distances by patch type using flexible subsetting options
res <- list()
for (i in unique(patch)[-1]) {
  sel <- grep(i, delta.S$patch1)[grep(i, delta.S$patch1)%in%grep(i, delta.S$patch2)]
  res[[i]] <- delta.S[sel, ]
}
head(res[[1]])  # check output
@

<<echo=FALSE,results=hide>>=
# Calculate distance from focal species' patch to those of other species
d12 <- matrix(ncol = 2, nrow = 11)
for (i in 1:11) {
  x <- res[[i]][grep('LACL', res[[i]]$patch1)[grep('LACL', res[[i]]$patch1) %in% 
                grep('LAAC', res[[i]]$patch2)], ]
  d12[i, 1] <- mean(x$tetra.dS)
  d12[i, 2] <- sd(x$tetra.dS)
}
rownames(d12) <- names(res)
colnames(d12) <- c('mean', 'sd')
d13 <- matrix(ncol = 2, nrow = 11)
for (i in 1:11) {
  x <- res[[i]][grep('LAEL', res[[i]]$patch1)[grep('LAEL', res[[i]]$patch1) %in% 
                grep('LAAC', res[[i]]$patch2)], ]
  d13[i, 1] <- mean(x$tetra.dS)
  d13[i, 2] <- sd(x$tetra.dS)
}
rownames(d13) <- names(res)
colnames(d13) <- c('mean', 'sd')
d23 <- matrix(ncol = 2, nrow = 11)
for (i in 1:11) {
  x <- res[[i]][grep('LAEL', res[[i]]$patch1)[grep('LAEL', res[[i]]$patch1) %in% 
                grep('LACL', res[[i]]$patch2)], ]
  d23[i, 1] <- mean(x$tetra.dS)
  d23[i, 2] <- sd(x$tetra.dS)
}
rownames(d23) <- names(res)
colnames(d23) <- c('mean', 'sd')
@

<<echo=F,results=hide>>=
rs <- names(sort(rank(rowMeans(cbind(d12[,1], d13[,1], d23[,1])))))
@

<<label=distplot,fig=TRUE,echo=FALSE,results=hide,include=FALSE,width=5,height=5>>=
# Plot mean +/- SD of color distances by patch
par(mar=c(4,4,2,2), oma=c(0,2,0,0), xpd=FALSE)
pad <- .15
plot(c(1:11)~d23[rs,1], xlim = c(-16, 16), ylab = "", xlab = expression(paste(Delta, "S (JNDs)")), 
     yaxt = 'n', pch = 21, ylim = c(0.5, 11.5), xaxt='n', type='n')
segments(d23[rs, 1] - d23[rs, 2], 1:11, d23[rs, 1] + d23[rs, 2], 1:11, col='darkgrey')
points(c(1:11)~d23[rs,1], pch = 21)
segments(-d13[rs, 1] - d13[rs, 2], 1:11 - pad, -d13[rs, 1] + d13[rs, 2], 1:11 - pad, col='darkgrey')
points(c(1:11)-pad~I(-d13[rs, 1]), pch = 22)
segments(-d12[rs, 1] - d12[rs, 2], 1:11 + pad, -d12[rs, 1] + d12[rs, 2], 1:11 + pad, col='darkgrey')
points(c(1:11)+pad~I(-d12[rs, 1]), pch = 23)
abline(v=0)
abline(v = c(1,-1), lty = 3)
axis(side = 2, at = c(1:11), labels = rs, las = 2, cex.axis=.75)
axis(side = 1, at = c(-15,-10,-5,0,5,10,15), labels=c(15,10,5,0,5,10,15))
mtext(side = 2, "plumage patch", line=4)
par(xpd=TRUE)
text(x=c(9,-9), y=rep(par('usr')[4]+.6, 2), c("ingroup\ncomparison", "outgroup\ncomparisons"), cex=.75)
legend('topright', bty='n', pch = c(21,22,23), legend = c("LACL-LAEL", "LAAC-LAEL", "LAAC-LACL"), 
       cex=.7)
@

\begin{figure}
    \begin{subfigure}[b]{0.5\textwidth}
      \centering
      \includegraphics{fig/ms-distplot}
      \caption{}
      \label{figure:distplot}
    \end{subfigure}
    \begin{subfigure}[b]{0.5\textwidth}
      \centering
      \includegraphics{fig/ms-volplot}
      \caption{}
      \label{figure:volplot}
    \end{subfigure}
  \caption{\textbf{(a)} Dotplot showing colour distances (in units of just noticeable differences, JNDs) by patch (y-axis) for three pairs of African starling species (Sturnidae). Dotted vertical lines indicate JND=1, above which the pair of colour patches is distinguishable by birds. Points indicate chromatic distances for \emph{L. chloropterus}-\emph{L. elisabeth} (circles), \emph{L. acuticaudus}-\emph{L. elisabeth} (squares) and \emph{L. acuticaudus}-\emph{L. chloropterus} (diamonds) comparisons. \textbf{(b)} Tetrahedral colourspace plot showing minimum convex polygons (convex hulls) containing reflectance spectra for plumage patches from \emph{Lamprotornis acuticaudus} (red), \emph{L. chloropterus} (blue) and \emph{L. elisabeth} (green). Points represent individual plumage patches (dark grey: cheek colour, light grey: belly colour, black: remaining plumage patch colours). The large grey circle (lower right) is the achromatic origin, and the upper right portion of the graph points toward the SWS cone (i.e. blue colours).}
\end{figure}

<<echo=F,results=hide>>=
# 7. Calculate tetra colorspace variables
tcs1 <- tcs(vm1)
tcs1.m <- tcs(vismodel(specs.m))
summary(tcs1, by=spp[-1])
@

% Uncomment to produce plot
%
% <<tetracolourspaceplot>>=
% # ideas:
% #   highlight volume overlaps as colour shown in distplot
% pal2 <- brewer.pal(11, "Spectral")

% # Plot species in colorspace
% tcs1$spp <- sapply(strsplit(rownames(tcs1), "\\."), "[", 1)
% tcs1$patch <- sapply(strsplit(rownames(tcs1), "\\."), "[", 4)

% tcs1a <- tcs1.m[grep('LAAC', rownames(tcs1.m)),]
% tcs1b <- tcs1.m[grep('LACL', rownames(tcs1.m)),]
% tcs1c <- tcs1.m[grep('LAEL', rownames(tcs1.m)),]

% #
% # red=LAAC, blue=LACL, green=LAEL
% pal <- brewer.pal(7, "Set1")

% pal3 <- pal2
% pal3[c(1:2,4:10)] <- 'black'
% pal3[3] <- grey(.8)
% pal3[11] <- grey(.4)
%
% tcsplot(tcs1a, col=pal3, size=.005)
% tcsvol(tcs1a, col=pal[1])
% tcspoints(tcs1b, col=pal3, size=.005)
% tcsvol(tcs1b, col=pal[2])
% tcspoints(tcs1c, col=pal3, size=.005)
% tcsvol(tcs1c, col=pal[3])
% # rgl.snapshot('ms-volplot.png')
% @

For producing a tetrahedral colourspace plot, we used \code{tcs(vm1, relative = TRUE)} to indicate
that \{\emph{usml}\} values should be scaled to sum to unity for each patch. Next, we used the
\code{voloverlap} function to calculate numerical values for the volumes occupied by each cluster of
species plumage patches, as well as their overlaps. The \code{plot=TRUE} option provides a useful
graphical representation of the overlap in colourspace (Figure \ref{figure:overlapplot}). The
ability to calculate an exact overlap volume in \pavo{} (rather than an estimated volume derived
from Monte Carlo simulation) represents a significant advance in the ability to analyze colourspace
distributions, and will be useful in testing hypotheses pertaining to differential `sensory niche'
occupation by different taxa.

% <<label=overlapplot,echo=F,results=hide,fig=F,include=F>>=
% # 7. Calculate volume overlap
% voloverlap(tcs1b, tcs1c, col=pal[2:3], plot=T)
% # setwd('~/github/pavo/manuscript/fig/')
% # rgl.snapshot('ms-overlapplot.png')
% @

\begin{figure}[H]
\centering
\includegraphics[width=3in]{fig/ms-overlapplot}
\caption{Convex hulls containing plumage patches for \emph{Lamprotornis chloropterus} and \emph{L. elisabeth} in avian tetrahedral colourspace. Polyhedrons are delimited by plumage patches at the vertices. Colours indicate \emph{L. chloropterus} (blue) and \emph{L. elisabeth} (green), with the volume overlap (similar colourspace occupied) shown in grey.}
\label{figure:overlapplot}
\end{figure}

\subsection{Results}

Figure \ref{figure:distplot} shows that nearly all plumage patch comparisons are divergent (JNDs >
1, dotted lines) within the subclade as well as compared to the outgroup \emph{L. acuticaudus}.
These data show that the expansion of occupied colourspace for both subspecies is largely due to
divergence in the colour of the belly patch (see light grey circles at edges of green and blue
polyhedrons in Figure \ref{figure:volplot}). Interestingly, the cheek plumage patch of \emph{L.
elisabeth} is more  similar to \emph{L. acutacaudus} than \emph{L. chloropterus} (see Figures
\ref{figure:specsplot} and dark grey circles in \ref{figure:volplot}).

\section{Citation of \pavo{}}

%\begin{center}\fbox{Figure \ref{fig:REF} about here.}\end{center}

\begin{acks}
We would like to thank Jarrod D. Hadfield and Mary Casswell Stoddard for sharing code that helped 
us develop some of \pavo{}'s capabilities. P.-P.B. is supported by a Canadian Graduate Schorlaship from
the National Science and Engineering Research Council. 
\end{acks}

\bibliographystyle{bes}
\bibliography{references}

Figures\\
1-  I recommend a possible workflow chart that would detail a common path to using the main fxns\\
2-  A tetrahedral plot\\
3-	A heat map\\
4-	A voloverlap? \\

%\begin{figure}
%\centering
%\includegraphics{<figure name>}
%\caption{<Figure caption>}
%\end{figure}
%\begin{table}
%\caption{<Table caption>}
%\centering
%\begin{tabular}{<table alignment>}
%\toprule
%<column headings>\\
%\midrule
%<table entries
%(separated by & as usual)>\\
%<table entries>\\
%.
%.
%.\\
%\bottomrule
%\end{tabular}
%\end{table}


\end{document}