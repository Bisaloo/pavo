%ScholarOne also provide the following basic guidelines for uploading a LaTeX formatted manuscript:
%1.  Always upload the main LaTeX file first, selecting the file designation of Main Document.
%2.  Then, upload each file that is related to the main .TEX file and is needed for processing, selecting the file designation of TeX/LaTeX Suppl File.
%3.  Be sure to upload all style sheets, reference files, and at least one bibliography file, that are part of the document.
%4.  All image files must be saved and uploaded in .EPS format in order for the file to properly format and convert.
%5.  If changes are made to the main LaTeX document after all of the related files have been uploaded, all supplementary LaTeX files will have to be removed and re-uploaded.


\documentclass[times,mee,doublespace]{besauth}

\usepackage{hyperref}
\usepackage{lineno}
\usepackage{float}
\usepackage{subcaption}

% Macros
\newcommand{\pavo}{{\tt pavo}}  
\newcommand{\code}[1]{{\tt #1}}

\begin{document}
\SweaveOpts{concordance=TRUE, prefix.string=fig/ms}

%%%%%%%%%%%%
%TITLE PAGE%
%%%%%%%%%%%%
\linenumbers

\runningheads{R. Maia \textit{et al.}}{\pavo{}: R package for color analysis}

\papertype{Application}

\title{\pavo{}: an R package for the perceptual analysis, visualization and organization of spectral color data}

\author{Rafael Maia\affil{1}\corrauth\, Chad M. Eliason\affil{1}, Pierre-Paul Bitton\affil{2}, St\'{e}phanie M. Doucet\affil{2} and Matthew D. Shawkey\affil{1}} 

\address{\affilnum{1}Department of Biology, Integrated Bioscience Program, University of Akron, Akron, OH 44325- 3908, USA.; and \affilnum{2}Department of Biological Sciences, 401 Sunset Avenue, Biology Building, University of Windsor, Windsor, Ontario, Canada, N9B 3P4.}

\corraddr{rm72zips.uakron.edu}

%\cgs{grant sponsor name (no number)}
%\cgsn{grant1{1}, grant2{2}}{123, 456}

\begin{abstract} 

\begin{enumerate} 

\item Animal coloration has been a traditional model for the study of a diverse range of topics in
biology. Recent technical, methodological and empirical advances have led to a dramatic increase in
studies using spectrophotometry to quantify reflectance properties of biological materials, which
coupled with modelling species-specific color perception, have provided important insights to
ecological and evolutionary aspects of animal visual communication.

\item Despite this growing interest, a unified framework for analyzing spectral data is still
lacking. We introduce \pavo{}, an R packgage that facilitates the organization, visualization, and
analysis of spectral data in a cohesive framework. \pavo{} is highly flexible: it can organize and
manipulate  data from a variety of sources, implements easy to use visualization tools, and provides
many analytical capabilities, including visual system modeling for a broad range of taxa.

\item In this paper, we present a summary of the functions implemented in \pavo{}, suggest a
workflow to explore spectral data, and model colors using user-defined visual systems. We also
present suggestions for handling psychophysiological data and an exact solution for the calculation
of color volume overlap, which expands on previously derived methodologies. These suggestions are
implemented in the package.

\item As an example of \pavo{}'s capabilities, we compare the color patterns of three African glossy
starling species, two of which have diverged very recently. Using spectral data obtained from
museum specimens and avian visual models, we show that despite recently diverged, these species
have accumulated levels of color disparity  between each other comparable to that between them and
their more distantly related sister species. The flexibility and streamlined workflow of pavo{} is
demonstrated by using different visual models and several plotting capabilities.

\item \pavo{} provides a unique environment capable of tackling complex sensory ecology questions
which previously required the use of various, sometimes restricted, software and programs.

\end{enumerate} 

\end{abstract}

\keywords{animal communication, colorspace, just noticeable differences, receptor noise, sensory ecology, spectrophotometry, visual model}

\maketitle

%<<echo=FALSE, results=hide>>=
%library(pavo)
%ps.options(pointsize=12)
%options(width=60)
%@

\section{Introduction}

The role that coloration and color vision plays in animal communication has been a fundamental
question in evolutionary biology for centuries \citep{darwin:1859,darwin:1896,
Poulton:1890,Bennett:2007hm}. Visual communication has provided an unique opportunity to investigate
aspects of natural selection \citep{Chittka:1992} and sexual selection \citep{Hill:2002}, and how
these interact \citep{Kemp:2009}. It it also an ideal system for truly integrative biological
research, spanning from the optical processes generating color \citep{Shawkey:2009}, hormonal and
genetic mechanisms regulating phenotype \citep{Muller:2009}, physiological processes involved
in perceiving the signal \citep{Hart:2001}, and its adaptive and evolutionary patterns
\citep{Badyaev:2003,Darst:2006}.

However, ``color'' refers to a sensory experience, not an objective quantity, and the realization
that animals can vary quite considerably in their visual system and how they process this
information prompted two important methodological advances. First, it highlighted the need for an
objective quantification of the color reflected by surfaces, as a first approximation of an
``receiver-independent'' measure of an organism or object's color
\citep{Endler:1993wm,Eaton:2003,Bennett:2007hm}. Over the last couple of decades, the popularization
of portable spectrophotometers that can measure reflectance across and beyond the human visible
wavelength range have opened the possibility of quantifying the spectral properties of animal and
plant integuments \citep{Endler:1990,Eaton:2003,Andersson:2006}. Second, advances in the
understanding of how animals perceive and process color have allowed the combinination of
information on receiver psychophysiology and reflectance data in visual models to estimate how
animals see and differentiate these colors
\citep{Goldsmith:1990,Tovee:1995vv,Vorobyev:1998,Vorobyev:1998to}.

Despite these advances, a cohesive framework for working with and analyzing color from reflectance
data is still limited from a practical standpoint. Data collection software from spectrophotometer
manufacturers are not standardized, producing inconsistent output files, and software for analyses
are either restricted in the methods implemented, in the capabilities to import and process data,
the platforms in which they are available, or rely on proprietary and/or closed software \citep[for
a review of available software, see][]{Montgomerie:2006}. Color data often requires additional
converting and exporting into statistical software for analyses, thus restricting the
standarization of protocols, as well as batch processing and automation of workflows. Combined with
published descriptions that are often poorly detailed or inconsistent, the current procedures and
implementations severely hinder the reproducibility of research and the reimplementation of methods.

We introduce \pavo{} \textendash \; a package for R \citep{rcore} that tackles these problems by
providing a flexible, yet cohesive, environment in which researchers can organize, analyze and
visualize color data generated by spectrophotometry. R is also open source and multi-platform, and
is rapidly becoming the working language for scientific programming and data analysis, particularly
in ecology and evolution \citep[e.g.][]{ape,Bolker:2008}. \pavo{} incorporates R's flexibility by
using object classes that can seamlessly interpret each other, providing functions that can
intuitively be used to import, explore, process and analyze spectral color data under a variety of
user defined models. We propose that combining these procedures under a coherent framework not
only streamlines workflow, but also allows data to be explored and manipulated in ways that can be
used to visualize patterns, obtain information and develop hypothesis that may otherwise pass
unnoticed (Figure \ref{figure:work}).

\begin{figure}[H]
\centering
\includegraphics{fig/ms-workflow}
\caption{Example \pavo{} workflow, highlighting its main functions and plotting capabilities}
\label{figure:work}
\end{figure}


\section{The \pavo{} package}

The stable release of \pavo{} is available from CRAN (\url{http://cran.r-project.org/}) for direct
installation from R, and the development version is available from github
(\url{https://github.com/rmaia/pavo}). \pavo{} was developed with three main workflow stages in mind
(Figure \ref{figure:work}): \textbf{organization} of spectral data by inputting raw files and
processing their spectral content; \textbf{visualization} of the output, including exploratory
capacities to identify further required manipulations and previously unconsidered patterns; and
\textbf{analysis} of data from the spectral shape of reflectance curves or by incorporating receiver
psychophysiology in visual models (Figure \ref{figure:work}). As noted by \cite{Bennett:2007hm} and
others \citep{Andersson:2006, Montgomerie:2006}, though spectral data has become commonplace in
studies of animal coloration, it is easy to obtain poor-quality or inaccurate data. Therefore a
workflow for spectral color data analysis has to go beyond a ``plug and chug'' implementation,
requiring thorough exploratory investigation. With this in mind, \pavo{} takes advantage of the
object-oriented programming environment in R which is ideal for such approach, as outlined below.

\subsection{Organization}

Spectral data is stored in \pavo{} and recognized by its functions by use of a new object class,
\code{"rspec"}, which inherits methods from \code{data.frame}. Objects of class \code{rspec} are
characterized by having individual reflectance spectra as columns of the data frame, with a first
column containing the wavelength identification data. Raw spectral data can be imported using the
function \code{getspec}, which currently supports data from a variety of spectrometer and
microspectrometer models (Ocean Optics OOIBase and SpectraSuite files, Avantes AvaSpec, and CRAIC).
In addition, previously compiled data frames can be imported to R and converted to \code{rspec}
objects using the \code{as.rspec} function.

The use of dedicated R object classes allows generic functions such as \code{plot} and
\code{summary} to identify the object as a particular type of data frame and interpret it
accordingly (see below). The class \code{"vismodel"} is used to interpret spectral data that has
been processed through one of the visual models implemented, and also stores information on how it
was generated (e.g. the visual phenotype, background and illuminant used, and any transformations
applied; see below). Additionally, the \code{"tcs"} class refers to tetrahedral colorspace models
\citep{Endler:2005,Stoddard:2008}, and the \code{summary} function can be used to extract summary
variables, such as the color volume or hue span \citep{Stoddard:2008} for groups and subsets of
points.

It is common when collecting spectral data to take multiple measurements from the same sample,
averaging these to avoid sampling error \citep{Quesada:2006}. \code{pavo} provides the
\code{aggspec} function for this purpose, as well as the \code{procspec} function for noise removal via
smoothing, and transformations to standardize and clean spectral data.

\subsection{Visualization}

With \pavo{} installed and loaded, the \code{plot} function recognizes \code{rspec} objects and
plots them accordingly \textendash \; interpreting the first column as wavelengths (and usually
using it as the x axis) and the remaining columns as reflectance values (y values) for individual
spectra. Several plotting options for multiple spectra are implemented (Figure \ref{figure:work}).
In addition, the \code{aggplot} function provides plotting capabilities for among-spectra summary
statistics plotting (Figure \ref{figure:work}), with a similar syntax to \code{aggspec}. \pavo{}
also offers exploratory plotting capabilities that can be combined with data processing and
formatting, such as \code{explorespec} (for visualizing groups of spectra) and \code{smoothplot}
(for choosing smoothening parameters; Figure \ref{figure:work}).

Finally, \pavo{} offers plotting capabilities for the avian tetrachromatic colorspace model
\citep{Stoddard:2008, Endler:2005} through the \code{tcsplot} and \code{projplot} functions (Figure
\ref{figure:work}, see below).

\subsection{Analysis}

The \code{summary} function can be applied to \code{rspec} objects to produce several tristimulus
(hue, saturation and brightness) color variables extracted from the spectral shape of the
reflectance curve. This function calculates variables previously described in the literature
\citep[summarized in][]{Montgomerie:2006} for the spectra contained in the \code{rspec} input object
(description and formulae for the variables can be found in the help file, by typing
\code{?summary.rspec}, and in the package Vignette \textendash \; see Supporting Information).
Additionally, the function \code{peakshape} provides descriptors of spectral peaks, such as the
wavelenth of maximum reflectance and the full width at half maximum, and can be fine-tuned to
extract information from specific areas of the curve, which can be useful when the spectral curve
has multiple peaks or a complex shape (e.g. describing the UV peak of carotenoid curves, Figure
\ref{figure:work}).

\pavo{} also allows the easy production of models that incorporate the visual system of the receiver
in describing colors through the \code{vismodel} function. Models can be calculated incorporating
the visual phenotype (cone absorbance), background color, and ambient illuminant
\citep{Vorobyev:1998}. Several avian receptor phenotypes \citep{Hart:2001,Endler:2005} are
implemented as options, but user-defined receptor data from any taxon can be used as model input.
Further, the \code{sensmodel} function implements the calculation of cone absorbance curves based on
peak sensitivity information \citep[available from the literature, e.g.][]{Hart:2001}, and can also
include oil droplet and ocular transmission information in the calculations
\citep{Govardovskii:2000,Hart:2005}.

Visual models can be calculated in terms of absolute photon catches, in which case the receptor
noise model can be used to infer contrast between colors \citep[implemented in the function
\code{colordist}][]{Vorobyev:1998} or in relative cone stimulation, in which case the model reduces
to a colorspace model represented in $n-1$ dimensions \citep[where $n$ is the number of different
receptors involved in color vision][]{Goldsmith:1990,Endler:2005,Stoddard:2008}. Absolute or relative cone
stimulation can be selected by the logical argument \code{relative} from the \code{vismodel} function. In the
case of the avian tetrahedral colorspace, several additional variables can be calculated based on spherical
coordinates which represent the hue based on the angles and saturation based on the distance from
the achromatic center \citep[see][]{Stoddard:2008} by calling the \code{tcs} function. This function
generates an object of class \code{tcs}; a \code{summary} call from a \code{tcs} object will return
summary statistics described in \cite{Stoddard:2008} for sets of points (see below).

\subsection{Volume Overlap and Fechner's law in the Tetrahedral Colorspace Model}

\pavo{} also builds upon previosuly described visual model methods. For example,
\cite{Stoddard:2011} present the useful approach of calculating the overlap between the volumes
defined by two sets of points in colorspace. They used this metric to quantify mimicry
\citep{Stoddard:2011,Stoddard:2012}, such that a greater volume overlap would indicate greater
overall color similarity. Given the complexity of calculating the intersection of three-dimensional
convex hulls, \cite{Stoddard:2011} used a Monte Carlo approach to estimate the degree of volume
overlap. \pavo{}, instead, provides the exact solution for the calculation of the intersection of
color volumes, using a method originally implemented to calculate the overlap between
multidimensional niche \citep{Villeger:2011} through the computational geometry capabilities
available from the \code{rcdd} package \citep{rcdd}.

Finally, we have addressed previously identified methodological inconsistencies in adapting visual
models to the tetrahedral colorspace. For example, \cite{Endler:2005} recommend log-transforming
photon catches before defining the colorspace (which is done by making photon catches relative by
dividing the photon catch of each receptor by the sum of all receptors, Figure
\ref{figure:logplot}). This transformation makes the difference between stimuli proportional to
their magnitude \citep[i.e. following Fechner's law; see also][]{Vorobyev:1998,Endler:1990}.
\cite{Stoddard:2008} evaluated the consequences of this transformation and noted dramatic and
unpredictable effects in hue and chroma values. Though the decrease in hue variance and an overall
decrease in chroma values should be expected as a result of the transformation, the unpredictable
effects on hue brought to attention by \cite{Stoddard:2008} needs explaining. As the authors noted
\citep[see][Supplemental Information]{Stoddard:2008}, this is largely a result of normalizing all
input functions (reflectance, sensitivity, background and illuminant) to integrals of 1, which
yields cone stimulations ($Q_i$ for the cone class $i$) that range from 0 to 1. Log-transforming
these $Q_i$ values ($f_i = log(Q_i)$) results in negative numbers, which if made relative by
dividing by the sum ($f_{i\;relative} = f_i / \sum{f_i}$) results in the greatest \textit{absolute}
$f_i$ value (i.e. the ``most negative'' and thus smallest) being the greatest $f_{i\;relative}$
value \textendash \; for example, $-0.5 > -5$, but $\frac{-0.5}{-5.5} < \frac{-5}{-5.5}$. This
completely reverses the relative ranking of photoreceptor classes, yielding erroneous colorspace
coordinates (Figure \ref{figure:logplot}, middle). \cite{Stoddard:2008} note that this can be dealt
with by scaling photon catch values by a large value, but given that the objective of this transformation
is to make stimuli distances proportional to their scale, arbitrary scale transformations will
result in undersireable effects. Instead, we propose the following transformation for log-
transformed photon catches ($fi$), implemented in \pavo{} when \code{vismodel} is executed with the
option \code{relative=TRUE}:

\begin{equation}
f_{i\;relative} = \frac{(f_i - \sum{f_i})}{\sum{(f_i - \sum{f_i})}}
\end{equation}

which preserves measurement scale but still yields hue values that are consistent with original
values, but with differences that are a linear function of their magnitude as expected from
Fechner's law (Figure \ref{figure:logplot}, bottom). This transformation is only valid
(and only used by \code{vismodel}) when log-transformed quantum catches are negative values; in
other cases the transformations suggested by \cite{Endler:2005,Stoddard:2008} are valid.
<<logplot,fig=TRUE,include=FALSE,echo=FALSE,results=hide,width=6,height=4.5>>=
require(pavo)
specs <- getspec("~/github/pavo/vignette_data/", ext="ttt", decimal=",", subdir=T, subdir.names=F)
mspecs <- aggspec(specs, by=3, FUN=mean)
vm1 <- vismodel(mspecs)
par(mar=c(4,4,1,1), las=1, ps=12)
layout(matrix(c(1,1,1,2,3,4), ncol=2), widths=c(1,.35))
plot(mspecs, 2, lwd=3)
barplot(vm1$qi[1,1:4], col='darkgrey', ylab="untransformed", ylim=c(0,.7))
barplot(log(vm1$qi[1,1:4])/sum(log(vm1$qi[1,1:4])), col='darkgrey', ylab="log transform A", 
        ylim=c(0,.7))
barplot(vm1$fi[1,1:4], xlab="cone", col='darkgrey', ylim=c(0,.7), ylab='log transform B')
@
\begin{figure}[t]
\centering
\includegraphics[width=3in]{fig/ms-logplot}
\caption{Reflectance curve of a northern cardinal (\emph{Cardinalis cardinalis}, left) and different transformations of the quantum catch values calculated with \code{vismodel}. Transformations shown are: untransformed but normalized to sum of unity (top right), natural log transformed \emph{then} normalized to sum of unity (middle right), and the transformation suggested here, in which the sum of natural log transformed values are subtracted from the $f_i$ values prior to normalizing to have sum of unity (bottom right).}
\label{figure:logplot}
\end{figure}

\section{Example: Colorspace divergence in glossy starlings (Sturnidae)}

Here we exemplify some of \pavo{}'s capabilities and workflow by comparing the color patterns of a
monophyletic clade of three glossy starling species. Glossy starlings from the African clade have
bright and diverse iridescent colors likely used in sexual selection and social competition
\citep{Rubenstein:2009}. The lesser blue-eared starling (\emph{Lamprotornis chloropterus}) and the
southern blue-eared starling (\emph{L. elisabeth}) form a recently diverged clade that some
\citep[including the International Ornithological Committee;][]{Gill:2012} have considered full
species, whereas others have classified as subspecies of \emph{L. chloropterus}
\citep{Craig:1998,Lovette:2007}. We compared the extent to which these two species have diverged in their
colors, and compared both to their sister species, the sharp-tailed starling (\emph{L. acuticaudus}).
<<echo=F,results=hide>>=
require(RColorBrewer)
# require(pavo)
source('~/github/pavo/R/aggspec.R')
pal <- brewer.pal(7, "Set1")
pal2 <- brewer.pal(11, "Spectral")
@

\subsection{Step 1: Organization and Processing}

The data consist of reflectance spectra (in Avantes ``.ttt'' output format) taken from museum
specimens of the three species. We measured three reflectance spectra from 11 plumage patches (see
Figure \ref{figure:distplot} for list) of four males per species. We loaded, averaged and  removed
the electrical noise arising from the spectrometer from these 396 raw spectral data files by
individual using the following lines of code in \pavo{}:
% demo input of raw data
<<echo=TRUE,results=hide,eval=FALSE>>=
specs <- getspec(where = '/Desktop/glossystarlings', ext = 'ttt', lim = c(300, 700)) #get raw data
specs <- aggspec(specs, by = 3, FUN = mean) #average by groups of 3 spectral curves
specs <- procspec(specs, opt='smooth') #remove electrical noise
@
<<echo=FALSE, results=hide>>=
load('~/github/pavo/toydata/ACE.RData')
specs <- as.rspec(cbind(eliz, chlo[,-1], acut[,-1]))
# Create metadata
spp <- sapply(strsplit(names(specs), "\\."), "[", 1)
ids <- sapply(strsplit(names(specs), "\\."), "[", 2)
sex <- sapply(strsplit(names(specs), "\\."), "[", 3)
patch <- sapply(strsplit(names(specs), "\\."), "[", 4)
# Get equal sample sizes by sampling randomly from L. chloropterus, L. acuticaudus
set.seed(101)
p <- sample(unique(ids[spp=="LAAC"&sex=="MAL"]), size = 4)
acut.sub <- cbind(wl = 300:700, specs[, ids%in%p])
acut.sub <- as.rspec(acut.sub)
set.seed(101)
p <- sample(unique(ids[spp=="LACL"&sex=="MAL"]), size=4)
chlo.sub <- cbind(wl = 300:700, specs[, ids%in%p])
chlo.sub <- as.rspec(chlo.sub)
# Get only males from L. elisabeth
eliz.sub <- eliz[, grep('MAL', names(eliz))]  # get only males
eliz.sub <- as.rspec(cbind(wl = 300:700, eliz.sub))
# Combine subsetted rspec objects
specs <- as.rspec(cbind(eliz.sub, chlo.sub[,-1], acut.sub[,-1]))
spp <- sapply(strsplit(names(specs), "\\."), "[", 1)
ids <- sapply(strsplit(names(specs), "\\."), "[", 2)
sex <- sapply(strsplit(names(specs), "\\."), "[", 3)
patch <- sapply(strsplit(names(specs), "\\."), "[", 4)
@

\subsection{Step 2: Visualization}

Next, we plotted spectra contained in this \code{rspec} object. We used \code{aggplot} to visualize
the mean reflectance curves for each body part from each species. Below we show the code for one of
these plots, as well as the results for the ``belly'' and ``cheek'' body patches: (Figure
\ref{figure:specsplot}):
<<echo=TRUE,eval=FALSE>>=
specs.belly <- specs[,1:13]  # subset wavelength column and the 12 spectra from the belly patch
spp <- substr(names(specs.belly),1,4)[-1]  # 4 first characters from column names (species labels)
aggplot(specs.belly, by = spp)  # average spectral data by species
@
<<label=specsplot,fig=TRUE,include=FALSE,echo=F,results=hide,width=6.5,height=3.1>>=
# Process spectra (apply smoothing) and average by species and patch
specs.sm <- procspec(specs, opt='smooth')
specs.m <- aggspec(specs.sm, by = paste(spp, patch)[-1])
spp.m <- sapply(strsplit(names(specs.m), "\\."), "[", 1)
sex.m <- sapply(strsplit(names(specs.m), "\\."), "[", 3)
patch.m <- sapply(strsplit(names(specs.m), "\\."), "[", 4)
# Plot results using aggplot
par(mfrow=c(1,2), mar=c(4,4,2,2), ps=10, oma=c(0,0,0,0), lwd=1)
p <- grep('belly', names(specs))
aggplot(specs.sm[,c(1,p)], by=substr(names(specs.sm)[p], 1, 4), alpha=.3, lwd=2, ylim=c(0,35))
p <- grep('cheek', names(specs.sm))
aggplot(specs.sm[,c(1,p)], by=substr(names(specs.sm)[p], 1, 4), alpha=.3, lwd=2, ylim=c(0,35))
@

\begin{figure}[H]
\centering
\includegraphics{fig/ms-specsplot}
\caption{Plots of mean smoothed spectra for different body patches (belly, left; cheek, right) in three
species of African starling (Sturnidae). Line 
colors indicate species (red, \emph{L. acuticaudus}; blue, \emph{L. chloropterus}; green, \emph{L.
elisabeth}) and shaded areas indicate the standard deviation of the spectral data.}
\label{figure:specsplot}
\end{figure}

\subsection{Step 3: Analysis}

To understand how these colors are perceived by birds, we used the \code{vismodel} function to
compare colors taking into account avian visual sensitivies (sensory phenotype). \pavo{}
incorporates available data on the retinal sensitivies of numerous taxa, including the European
starling (\emph{Sturnus vulgaris}, \code{visual='star'}), which we incorporated here
\citep{Hart:1998}. We used both the \code{relative=FALSE} and \code{relative=TRUE} options of the
\code{vismodel} function, to measure color attributes using the receptor noise and colorspace
models, respectively.

\subsubsection{Color distances}

First, \code{relative=FALSE} was used to calculate raw photon catch values for the four avian
photoreceptor classes (\{\emph{usml}\}), suitable for calculating chromatic distances \citep[$\Delta
S$,][]{Vorobyev:1998to}. We used relative cone abundances (arguments \code{n1, n2, n3, and n4})
for the European starling
\citep{Hart:1998}, which can be easily passed as arguments to the \code{coldist} function. The
\code{v} argument was set to 0.1 to give a \{\emph{"l"}\} cone Weber fraction of approximately 0.05
\citep{Vorobyev:1998,Vorobyev:1998to}. The results of \code{coldist} give color distances (chromatic
, $\Delta S$, Figure \ref{figure:distplot};  and achromatic, $\Delta L$, not shown) between all
possible combinations of plumage patches in the \code{tcs} object, and can be further subsetted to
only analyse comparisons of interest (e.g., colour difference between homologous patches of two
species). For example:
<<>>=
vm.star1 <- vismodel(specs, visual = 'star', relative = FALSE)
delta.S <- coldist(vm.star1, qcatch = 'fi', n1 = 1, n2 = 1.38, n3 = 3.34, n4 = 3.46, v = 0.1)
# subset only comparisons between belly spectra
head(delta.S[intersect(grep('belly', delta.S$patch1), grep('belly', delta.S$patch2)),], 3) 
@

The calculation of both chromatic and achromatic distances of these 8646 pairs of colors took about
0.9 seconds in a MacBook Pro running R version 2.15.2. We can see from Figure \ref{figure:distplot}
that the recently divergent \emph{L. chloropterus} and \emph{L. elisabeth} have accumulated similar
levels of color disparity among them as they have to their sister species, \emph{L. acuticaudus}.
Considering a value of 1 as a threshold for Just Noticeable Differences (JNDs, Figure
\ref{figure:distplot} dashed lines) nearly all plumage patch comparisons yield colors that are
discernible to the starling visual system, both within the \emph{L. chloropterus-L. elisabeth}
subclade as well as compared to the \emph{L. acuticaudus} outgroup. Given the high satuturation of
iridescent colors, small differences in the spectral shape can yield noticeably different colors.
This becomes clear when comparing the results for the most and least contrasting body patches
(``belly'' and ``cheek'', respectively; Figure \ref{figure:distplot}) to their spectral curves
(Figure \ref{figure:specsplot}).
<<echo=FALSE,results=hide>>=
# 5. Run visual models using starling visual sensitivies
vm1 <- vismodel(specs, visual = 'star', relative = TRUE)
vm2 <- vismodel(specs, visual = 'star', relative = FALSE)
@
<<echo=FALSE,results=hide>>=
res <- list()
for (i in unique(patch)[-1]) {
  sel <- grep(i, delta.S$patch1)[grep(i, delta.S$patch1)%in%grep(i, delta.S$patch2)]
  res[[i]] <- delta.S[sel, ]
}
# head(res[[1]])  # check output
# Calculate distance from focal species' patch to those of other species
d12 <- matrix(ncol = 2, nrow = 11)
for (i in 1:11) {
  x <- res[[i]][grep('LACL', res[[i]]$patch1)[grep('LACL', res[[i]]$patch1) %in% 
                grep('LAAC', res[[i]]$patch2)], ]
  d12[i, 1] <- mean(x$tetra.dS)
  d12[i, 2] <- sd(x$tetra.dS)
}
rownames(d12) <- names(res)
colnames(d12) <- c('mean', 'sd')
d13 <- matrix(ncol = 2, nrow = 11)
for (i in 1:11) {
  x <- res[[i]][grep('LAEL', res[[i]]$patch1)[grep('LAEL', res[[i]]$patch1) %in% 
                grep('LAAC', res[[i]]$patch2)], ]
  d13[i, 1] <- mean(x$tetra.dS)
  d13[i, 2] <- sd(x$tetra.dS)
}
rownames(d13) <- names(res)
colnames(d13) <- c('mean', 'sd')
d23 <- matrix(ncol = 2, nrow = 11)
for (i in 1:11) {
  x <- res[[i]][grep('LAEL', res[[i]]$patch1)[grep('LAEL', res[[i]]$patch1) %in% 
                grep('LACL', res[[i]]$patch2)], ]
  d23[i, 1] <- mean(x$tetra.dS)
  d23[i, 2] <- sd(x$tetra.dS)
}
rownames(d23) <- names(res)
colnames(d23) <- c('mean', 'sd')
@
<<echo=F,results=hide>>=
rs <- names(sort(rank(rowMeans(cbind(d12[,1], d13[,1], d23[,1])))))
@

<<label=distplot,fig=TRUE,echo=FALSE,results=hide,include=FALSE,width=5,height=5>>=
# Plot mean +/- SD of color distances by patch
par(mar=c(4,4,2,2), oma=c(0,2,0,0), xpd=FALSE)
pad <- .15
plot(c(1:11)~d23[rs,1], xlim = c(-16, 16), ylab = "", xlab = expression(paste(Delta, "S (JNDs)")), 
     yaxt = 'n', pch = 21, ylim = c(0.5, 11.5), xaxt='n', type='n')
segments(d23[rs, 1] - d23[rs, 2], 1:11, d23[rs, 1] + d23[rs, 2], 1:11, col='darkgrey')
points(c(1:11)~d23[rs,1], pch = 21)
segments(-d13[rs, 1] - d13[rs, 2], 1:11 - pad, -d13[rs, 1] + d13[rs, 2], 1:11 - pad, col='darkgrey')
points(c(1:11)-pad~I(-d13[rs, 1]), pch = 22)
segments(-d12[rs, 1] - d12[rs, 2], 1:11 + pad, -d12[rs, 1] + d12[rs, 2], 1:11 + pad, col='darkgrey')
points(c(1:11)+pad~I(-d12[rs, 1]), pch = 23)
abline(v=0)
abline(v = c(1,-1), lty = 3)
axis(side = 2, at = c(1:11), labels = rs, las = 2, cex.axis=.75)
axis(side = 1, at = c(-15,-10,-5,0,5,10,15), labels=c(15,10,5,0,5,10,15))
mtext(side = 2, "plumage patch", line=4)
par(xpd=TRUE)
text(x=c(9,-9), y=rep(par('usr')[4]+.6, 2), c("ingroup\ncomparison", "outgroup\ncomparisons"), cex=.75)
legend('topright', bty='n', pch = c(21,22,23), legend = c("LACL-LAEL", "LAAC-LAEL", "LAAC-LACL"), 
       cex=.7)
@

\begin{figure}
    \begin{subfigure}[b]{0.5\textwidth}
      \centering
      \includegraphics{fig/ms-distplot}
      \caption{}
      \label{figure:distplot}
    \end{subfigure}
    \begin{subfigure}[b]{0.5\textwidth}
      \centering
      \includegraphics{fig/ms-volplot}
      \caption{}
      \label{figure:volplot}
    \end{subfigure}
  \caption{\textbf{(a)} Dotplot showing color distances (in units of just noticeable differences, JNDs) by patch (y-axis) for three pairs of African starling species (Sturnidae). Dotted vertical lines indicate JND=1, above which the pair of colour patches is distinguishable by birds. Points indicate chromatic distances for \emph{L. chloropterus}-\emph{L. elisabeth} (circles), \emph{L. acuticaudus}-\emph{L. elisabeth} (squares) and \emph{L. acuticaudus}-\emph{L. chloropterus} (diamonds) comparisons. Error bars show +/- one standard deviation. \textbf{(b)} Tetrahedral colorspace plot showing minimum convex polygons (convex hulls) containing reflectance spectra for plumage patches from \emph{Lamprotornis acuticaudus} (red), \emph{L. chloropterus} (blue) and \emph{L. elisabeth} (green). Points represent individual plumage patches (dark grey: cheek color, light grey: belly color, black: remaining plumage patch colors). The large grey circle (lower right) is the achromatic origin, and the upper right portion of the graph points toward the SWS cone (i.e. blue colors).}

\end{figure}
<<echo=F,results=hide>>=
# 7. Calculate tetra colorspace variables
tcs1 <- tcs(vm1)
@
<<tetracolourspaceplot,echo=F,results=hide>>=
# Plot species in colorspace
tcs1$spp <- sapply(strsplit(rownames(tcs1), "\\."), "[", 1)
tcs1$patch <- sapply(strsplit(rownames(tcs1), "\\."), "[", 4)
tcs1$both <- paste(tcs1$spp, tcs1$patch)
tcs1.m <- aggregate(.~both, data=tcs1[,-c(17,18)], mean)
tcs1a <- tcs1.m[grep('LAAC', tcs1.m$both),]
tcs1b <- tcs1.m[grep('LACL', tcs1.m$both),]
tcs1c <- tcs1.m[grep('LAEL', tcs1.m$both),]
# red=LAAC, blue=LACL, green=LAEL
pal <- brewer.pal(7, "Set1")
# pal3 <- c('black',grey(.8),grey(.4))[c(1,3,2,2,2,2,2,2,2,2,2)]
# tcsplot(tcs1a, col=pal[1], size=.005)
# tcsvol(tcs1a, col=pal[1])
# tcspoints(tcs1b, col=pal[2], size=.005)
# tcsvol(tcs1b, col=pal[2])
# tcspoints(tcs1c, col=pal[3], size=.005)
# tcsvol(tcs1c, col=pal[3])
# rgl.snapshot('ms-volplot.png')
@

\subsubsection{Avian tetrahedral colorspace}

Finally, to produce a tetrahedral colorspace plot, we used \code{relative=TRUE} in the
\code{vismodel} input to indicate that \{\emph{usml}\} values should be scaled to sum of unity for
each patch. These results indicate that the expansion of occupied colorspace for both subspecies is
largely due to divergence in the colour of the belly patch (see light grey circles at edges of green
and blue polyhedrons in Figure \ref{figure:volplot}). Interestingly, the cheek plumage patch of
\emph{L. elisabeth} is more  similar to \emph{L. acutacaudus} than \emph{L. chloropterus}, to which
it is more closely related (see Figure \ref{figure:specsplot} and dark grey circles in Figure 
\ref{figure:volplot}).

We also used the \code{voloverlap} function to calculate the volumes occupied by each
species' plumage patches, as well as their overlaps. As an example, here is the result for the
overlap between the two recently diverged species (\code{tcs1b} and \code{tcs1c} are \code{tcs}
objects containing tetrahedral colourspace data for each species, as output by the \code{tcs} function in
\pavo{}):
<<echo=T,eval=FALSE, fig=F,include=F>>=
vm.star2 <- vismodel(specs, visual = 'star', relative = TRUE)
tcs.star <- tcs(vm.star2)
#subset points from the two species
tcs.lael <- tcs[grep('LAEL',row.names(tcs.star))]
tcs.lacl <- tcs[grep('LACL',row.names(tcs.star))]
voloverlap(tcs.lael, tcs.lacl, plot = TRUE)
@
<<echo=F,eval=T, fig=F,include=F>>=
voloverlap(tcs1b, tcs1c, plot = FALSE)
@
<<echo=F,results=hide>>=  % code to produce plot
# voloverlap(tcs1b, tcs1c, plot=T)
# setwd('~/github/pavo/manuscript/fig/')
# rgl.snapshot('ms-overlapplot.png')
@

\begin{figure}[H]
\centering
\includegraphics[width=3in]{fig/ms-overlapplot}
\caption{Colourspace occupied by \emph{Lamprotornis chloropterus} (blue) and \emph{L. elisabeth} (green). Convex hulls of each species are delimited by plumage patches at the vertices, with their volume overlap (similar colourspace occupied) shown in grey.}
\label{figure:overlapplot}
\end{figure}

The \code{plot=TRUE} option provides a useful graphical representation of the overlap in colourspace
(Figure \ref{figure:overlapplot}). Again, the calculated volume in \pavo{} represents the exact
solution to the geometric problem \citep[i.e. not through Monte Carlo simulation,][]{Stoddard:2011}.

\section{Citation of methods implemented in \pavo{}}

Most of the methods implemented in \pavo{} have been thoroughly described in their original
publications, to which users should refer for details and interpretation. For summary tristimulus
variables and spectral shape analysis of reflectance curves, see \cite{Montgomerie:2006}. For visual
models based on photon catches and receptor noise, see \cite{Vorobyev:1998} and
\cite{Vorobyev:1998to}. For visual phenotype sensitivity curve estimation, see
\cite{Govardovskii:2000} and \cite{Hart:2005}. For tetrahedral colorspace models, see
\cite{Endler:2005} and \cite{Stoddard:2008}, and for color volume overlap see \cite{Stoddard:2011}
and \cite{Stoddard:2012}. Users of the functions that apply these methods must cite the original
sources along with \pavo{}.

\begin{acks} We would like to thank Jarrod D. Hadfield and Mary Casswell Stoddard for sharing code
that helped  us develop some of \pavo{}'s capabilities. This work was supported by the NSF grant
DEB-1210630, AMNH Chapman research grant and Sigma XI GIAR (R.M.), HFSP grant RGY0083, AFOSR grant
FA9550-09-1-0159 (M.D.S.),  the University of Akron (M.D.S., R.M., C.M.E.), NSERC Discovery grant and 
Equipment grant (S.M.D), and NSERC Graduate Scholarship (P.-P.B.).
\end{acks}

\bibliographystyle{bes}
\bibliography{references}

\end{document}