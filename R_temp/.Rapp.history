tetraplot(tcs.a, new=T,hspin=F, size=0.01)
ttvol(tcs.a)
tetraplot(tcs.a, new=T,hspin=F, size=0)
ttvol(tcs.a)
ind
t(convhulln(tcsres$tcs[,c('x','y','z')],options='FA')$hull)
t(convhulln(tcs.a$tcs[,c('x','y','z')],options='FA')$hull)
v=t(convhulln(tcs.a$tcs[,c('x','y','z')],options='FA')$hull)
v
apply(v,1,unique)
apply(v,2,unique)
a=data.frame(matrix(rnorm(30),ncol=3))
a
names(a)=c('x','y','z')
tetraplot<- function(tcsres, size=0.02, col='black', new=T, hspin=T, vspin=F, floor=T) {#
#
if(new)#
   open3d(FOV=1, mouseMode=c('zAxis','yAxis','zoom'))#
#
# can't figure out how to change the character type#
#
ttv=pavo::ttvertex#
#
cu=t(col2rgb('#984EA3'))/255#
cs=t(col2rgb('#377EB8'))/255#
cm=t(col2rgb('#4DAF4A'))/255#
cl=t(col2rgb('#E41A1C'))/255#
#
plot3d(unlist(ttv[c('xu','xs','xm','xl')]),#
		unlist(ttv[c('yu','ys','ym','yl')]),#
		unlist(ttv[c('zu','zs','zm','zl')]), type='s', lit=F,#
		radius=0.02, box=F, axes=F, xlab='',ylab='',zlab='',#
		col=c(rgb(cu[1],cu[2],cu[3]), rgb(cs[1],cs[2],cs[3]), #
		rgb(cm[1],cm[2],cm[3]), rgb(cl[1],cl[2],cl[3])))#
segments3d(ttv[c('xu','xs')], ttv[c('yu','ys')], ttv[c('zu','zs')], color='lightgrey')#
segments3d(ttv[c('xu','xm')], ttv[c('yu','ym')], ttv[c('zu','zm')], color='lightgrey')#
segments3d(ttv[c('xu','xl')], ttv[c('yu','yl')], ttv[c('zu','zl')], color='lightgrey')#
segments3d(ttv[c('xs','xm')], ttv[c('ys','ym')], ttv[c('zs','zm')], color='lightgrey')#
segments3d(ttv[c('xs','xl')], ttv[c('ys','yl')], ttv[c('zs','zl')], color='lightgrey')#
segments3d(ttv[c('xl','xm')], ttv[c('yl','ym')], ttv[c('zl','zm')], color='lightgrey')#
#
spheres3d(0,0,0,col='grey', radius=0.01, lit=F)#
#
spheres3d(tcsres[,c('x','y','z')], radius=size, color=col, lit=F)#
#
if(floor){#
  vertices <- c( #
      -0.7, -0.5, -0.3, 1.0,#
       0.7, -0.5, -0.3, 1.0,#
       0.7,  1, -0.3, 1.0,#
      -0.7,  1, -0.3, 1.0#
  				)#
  indices <- c( 1, 2, 3, 4 )#
 wire3d( qmesh3d(vertices,indices), lit=F )#
	}#
if(hspin)#
   play3d(spin3d(axis=c(0,0,1), rpm=20), duration=3)#
#
if(vspin)#
   play3d(spin3d(axis=c(1,0,0), rpm=20), duration=3)#
#
}
tetraplot(v)
v
a
tetraplot(a)
a=data.frame(matrix(rnorm(30,0,0.1),ncol=3))
names(a)=c('x','y','z')
tetraplot(a)
ttvol <- function(tcsres){#
#
vol <- t(convhulln(tcsres[,c('x','y','z')],options='FA')$hull)#
#
coords <- tcsres[,c('x','y','z')]#
#
ind <- t(combn(unique(c(vol)),2))#
#
for(i in 1:nrow(ind)){#
segments3d(coords[ind[i,],'x'],coords[ind[i,],'y'],coords[ind[i,],'z'])#
	}
rgl.triangles(coords[vol,1],coords[vol,2],coords[vol,3], alpha=0.1)#
#rgl.triangles(coords[vol,1],coords[vol,2],coords[vol,3], color='lightgrey')#
#
}
ttvol(a)
a=data.frame(matrix(rnorm(30,0,0.1),ncol=3))
names(a)=c('x','y','z')
tetraplot(a,new=F)
ttvol(a)
ttvol <- function(tcsres){#
#
vol <- t(convhulln(tcsres[,c('x','y','z')],options='FA')$hull)#
#
coords <- tcsres[,c('x','y','z')]#
#
ind <- t(combn(unique(c(vol)),2))#
#
for(i in 1:nrow(ind)){#
segments3d(coords[ind[i,],'x'],coords[ind[i,],'y'],coords[ind[i,],'z'])#
	}#
#
#rgl.triangles(coords[vol,1],coords[vol,2],coords[vol,3], alpha=0.1)#
rgl.triangles(coords[vol,1],coords[vol,2],coords[vol,3], color='lightgrey')#
#
}
tetraplot(a,new=F)
ttvol(a)
rgl.postscript('testplot.pdf',fmt='pdf')
t(convhulln(a[,c('x','y','z')],options='FA')$hull)
t(combn(unique(c(t(convhulln(a[,c('x','y','z')],options='FA')$hull))),2))
vol <- t(convhulln(tcsres[,c('x','y','z')],options='FA')$hull)
vol <- t(convhulln(tcs.a[,c('x','y','z')],options='FA')$hull)
vol <- t(convhulln(tcs.a$tcs[,c('x','y','z')],options='FA')$hull)
vol
rbind(vol,vol[1,])
combn(vol[,1],2)
combn(vol[,2],2)
apply(vol,1,function(x)combn(x,2))
apply(vol,2,function(x)combn(x,2))
apply(vol,1,function(x)combn(x,3))
apply(vol,2,function(x)combn(x,3))
apply(vol,2,function(x)combn(x,1))
apply(vol,2,function(x)combn(x,2))
list(vol)
split(vol, rep(1:ncol(vol), each = nrow(vol)))
vol
listvol <- split(vol, rep(1:ncol(vol), each = nrow(vol)))
lapply(listvol,function(x)combn(c,2))
lapply(listvol,function(x)combn(x,2))
sapply(listvol,function(x)combn(x,2))
sapply(listvol,function(x)t(combn(x,2)))
lapply(listvol,function(x)combn(x,2))
?par3d()
rbind(lapply(listvol,function(x)combn(x,2)))
rbind(unlist(lapply(listvol,function(x)combn(x,2))))
unlist(lapply(listvol,function(x)combn(x,2)))
lapply(listvol,function(x)combn(x,2))
lapply(listvol,function(x)t(combn(x,2)))
sapply(listvol,function(x)t(combn(x,2)))
rbind(lapply(listvol,function(x)t(combn(x,2))))
unlist(lapply(listvol,function(x)t(combn(x,2))))
lapply(listvol,function(x)t(combn(x,2)))
require(plyr)
ldply(lapply(listvol,function(x)t(combn(x,2))))
ldply(lapply(listvol,function(x)combn(x,2)))
lapply(listvol,function(x)combn(x,2))
lapply(listvol,function(x)t(combn(x,2)))
lapply(listvol,function(x)t(combn(x,2)))
matrix(lapply(listvol,function(x)t(combn(x,2))))
unlist(lapply(listvol,function(x)t(combn(x,2))))
unlist(lapply(listvol,function(x)t(combn(x,2)))[[1]])
unlist(lapply(listvol,function(x)t(combn(x,2)))[1])
?ldply
unlist(lapply(listvol,function(x)t(combn(x,2))))
(lapply(listvol,function(x)t(combn(x,2))))
ldply(lapply(listvol,function(x)t(combn(x,2))))
ldply(lapply(listvol,function(x)t(combn(x,2))))
dlply(lapply(listvol,function(x)t(combn(x,2))))
?ldply
dlply(lapply(listvol,function(x)t(combn(x,2))),rbind)
lapply(listvol,function(x)t(combn(x,2)))
do.call(lapply(listvol,function(x)t(combn(x,2))),matrix)
do.call(rbind,lapply(listvol,function(x)t(combn(x,2))))
coords[pointpairs[1,]]
coords
ls()
vol
coords <- tcs.a$tcs[,c('x','y','z')]
coords
coords[pointpairs[1,]]
pointpairs <- do.call(rbind,lapply(listvol,function(x)t(combn(x,2))))
coords[pointpairs[1,]]
coords[pointpairs[1,],1]
head(pointpairs)
coords[pointpairs[1,],1]
coords[pointpairs[1,],1]
coords[pointpairs[2,],1]
coords[pointpairs[3,],1]
ttvol <- function(tcsres){#
#
vol <- t(convhulln(tcsres[,c('x','y','z')],options='FA')$hull)#
#
coords <- tcsres[,c('x','y','z')]#
#
listvol <- split(vol, rep(1:ncol(vol), each = nrow(vol))) #each col = a triangle#
#
ppairs <- do.call(rbind,lapply(listvol,function(x)t(combn(x,2))))#
for(i in 1:nrow(pointpairs)){#
segments3d(coords[ppairs[i,],'x'], coords[ppairs[i,],'y'],coords[ppairs[i,],'z'])#
}#
#
#ind <- t(combn(unique(c(vol)),2))#
#
#for(i in 1:nrow(ind)){#
#segments3d(coords[ind[i,],'x'],coords[ind[i,],'y'],coords[ind[i,],'z'])#
#	}#
#rgl.triangles(coords[vol,1],coords[vol,2],coords[vol,3], alpha=0.1)#
#rgl.triangles(coords[vol,1],coords[vol,2],coords[vol,3], color='lightgrey')#
#
}
tetraplot(tcs.a, new=T,hspin=F, size=0)
tetraplot(tcs.a$tcs, new=T,hspin=F, size=0)
tetraplot(tcs.a$tcs, new=T,hspin=F, size=0.2)
tetraplot(tcs.a$tcs, new=T,hspin=F, size=0.02)
ttvol(tcs.a$tcs)
tetraplot(a, new=F,hspin=F, size=0.02)
ttvol(a$tcs)
ttvol(a)
ttvol <- function(tcsres){#
#
vol <- t(convhulln(tcsres[,c('x','y','z')],options='FA')$hull)#
#
coords <- tcsres[,c('x','y','z')]#
#
listvol <- split(vol, rep(1:ncol(vol), each = nrow(vol))) #each col = a triangle#
#
ppairs <- do.call(rbind,lapply(listvol,function(x)t(combn(x,2))))#
for(i in 1:nrow(ppairs)){#
segments3d(coords[ppairs[i,],'x'], coords[ppairs[i,],'y'],coords[ppairs[i,],'z'])#
}#
#
#ind <- t(combn(unique(c(vol)),2))#
#
#for(i in 1:nrow(ind)){#
#segments3d(coords[ind[i,],'x'],coords[ind[i,],'y'],coords[ind[i,],'z'])#
#	}#
#rgl.triangles(coords[vol,1],coords[vol,2],coords[vol,3], alpha=0.1)#
#rgl.triangles(coords[vol,1],coords[vol,2],coords[vol,3], color='lightgrey')#
#
}
tetraplot(a, new=T,hspin=F, size=0.02)
ttvol(a)
rm(pointpairs)
rm(ppairs)
rm(vol)
rm(coords)
rm(listvol)
tetraplot(a, new=T,hspin=F, size=0.02)
ttvol(a)
a <- data.fame(matrix(rnorm(60),ncol=3))
a <- data.frame(matrix(rnorm(60),ncol=3))
names(a) <- c('x','y','z')
a <- data.frame(matrix(rnorm(60,0,0.05),ncol=3))
names(a) <- c('x','y','z')
tetraplot(a, new=T,hspin=F, size=0.02)
ttvol(a)
a <- data.frame(matrix(rnorm(60,0,0.1),ncol=3))
names(a) <- c('x','y','z')
tetraplot(a, new=T,hspin=F, size=0.02)
ttvol(a)
a <- list(tcs=data.frame(matrix(rnorm(60,0,0.1),ncol=3)))
a
names(a[[1]]) <- c('x','y','z')
a
ttvol <- function(tcsres){#
#
vol <- t(convhulln(tcsres$tcs[,c('x','y','z')],options='FA')$hull)#
#
coords <- tcsres$tcs[,c('x','y','z')]#
#
listvol <- split(vol, rep(1:ncol(vol), each = nrow(vol)))#
#
ppairs <- do.call(rbind,lapply(listvol,function(x)t(combn(x,2))))#
#
for(i in 1:nrow(ppairs)){#
segments3d(coords[ppairs[i,],'x'], coords[ppairs[i,],'y'],coords[ppairs[i,],'z'])#
}#
#
rgl.triangles(coords[vol,1],coords[vol,2],coords[vol,3], alpha=0.1)#
#
}
ttvol <- function(tcsres){#
#
vol <- t(convhulln(tcsres$tcs[,c('x','y','z')],options='FA')$hull)#
#
coords <- tcsres$tcs[,c('x','y','z')]#
#
listvol <- split(vol, rep(1:ncol(vol), each = nrow(vol)))#
#
ppairs <- do.call(rbind,lapply(listvol,function(x)t(combn(x,2))))#
#
for(i in 1:nrow(ppairs)){#
segments3d(coords[ppairs[i,],'x'], coords[ppairs[i,],'y'],coords[ppairs[i,],'z'])#
}#
#
rgl.triangles(coords[vol,1],coords[vol,2],coords[vol,3], alpha=0.1)#
#
}
ttvol <- function(tcsres){#
#
vol <- t(convhulln(tcsres$tcs[,c('x','y','z')],options='FA')$hull)#
#
coords <- tcsres$tcs[,c('x','y','z')]#
#
listvol <- split(vol, rep(1:ncol(vol), each = nrow(vol)))#
#
ppairs <- do.call(rbind,lapply(listvol,function(x)t(combn(x,2))))#
#
for(i in 1:nrow(ppairs)){#
segments3d(coords[ppairs[i,],'x'], coords[ppairs[i,],'y'],coords[ppairs[i,],'z'])#
}#
#
rgl.triangles(coords[vol,1],coords[vol,2],coords[vol,3], alpha=0.1)#
#
}
ttvol <- function(tcsres){#
#
vol <- t(convhulln(tcsres$tcs[,c('x','y','z')],options='FA')$hull)#
#
coords <- tcsres$tcs[,c('x','y','z')]#
#
listvol <- split(vol, rep(1:ncol(vol), each = nrow(vol)))#
#
ppairs <- do.call(rbind,lapply(listvol,function(x)t(combn(x,2))))#
#
for(i in 1:nrow(ppairs)){#
segments3d(coords[ppairs[i,],'x'], coords[ppairs[i,],'y'],coords[ppairs[i,],'z'])#
}#
#
rgl.triangles(coords[vol,1],coords[vol,2],coords[vol,3], alpha=0.1)#
#
}
ttvol <- function(tcsres){#
#
vol <- t(convhulln(tcsres$tcs[,c('x','y','z')],options='FA')$hull)#
#
coords <- tcsres$tcs[,c('x','y','z')]#
#
listvol <- split(vol, rep(1:ncol(vol), each = nrow(vol)))#
#
ppairs <- do.call(rbind,lapply(listvol,function(x)t(combn(x,2))))#
#
for(i in 1:nrow(ppairs)){#
segments3d(coords[ppairs[i,],'x'], coords[ppairs[i,],'y'],coords[ppairs[i,],'z'])#
}#
#
rgl.triangles(coords[vol,1],coords[vol,2],coords[vol,3], alpha=0.2)#
#
}
tetraplot(a, new=T,hspin=F, size=0.02)
a
a$tcs
a$tcs[,c('x','y','z')]
tetraplot<- function(tcsres, size=0.02, col='black', new=T, hspin=T, vspin=F, floor=T) {#
#
if(new)#
   open3d(FOV=1, mouseMode=c('zAxis','yAxis','zoom'))#
#
# can't figure out how to change the character type#
#
ttv=pavo::ttvertex#
#
cu=t(col2rgb('#984EA3'))/255#
cs=t(col2rgb('#377EB8'))/255#
cm=t(col2rgb('#4DAF4A'))/255#
cl=t(col2rgb('#E41A1C'))/255#
#
plot3d(unlist(ttv[c('xu','xs','xm','xl')]),#
		unlist(ttv[c('yu','ys','ym','yl')]),#
		unlist(ttv[c('zu','zs','zm','zl')]), type='s', lit=F,#
		radius=0.02, box=F, axes=F, xlab='',ylab='',zlab='',#
		col=c(rgb(cu[1],cu[2],cu[3]), rgb(cs[1],cs[2],cs[3]), #
		rgb(cm[1],cm[2],cm[3]), rgb(cl[1],cl[2],cl[3])))#
segments3d(ttv[c('xu','xs')], ttv[c('yu','ys')], ttv[c('zu','zs')], color='lightgrey')#
segments3d(ttv[c('xu','xm')], ttv[c('yu','ym')], ttv[c('zu','zm')], color='lightgrey')#
segments3d(ttv[c('xu','xl')], ttv[c('yu','yl')], ttv[c('zu','zl')], color='lightgrey')#
segments3d(ttv[c('xs','xm')], ttv[c('ys','ym')], ttv[c('zs','zm')], color='lightgrey')#
segments3d(ttv[c('xs','xl')], ttv[c('ys','yl')], ttv[c('zs','zl')], color='lightgrey')#
segments3d(ttv[c('xl','xm')], ttv[c('yl','ym')], ttv[c('zl','zm')], color='lightgrey')#
#
spheres3d(0,0,0,col='grey', radius=0.01, lit=F)#
#
spheres3d(tcsres[,c('x','y','z')], radius=size, color=col, lit=F)#
#
if(floor){#
  vertices <- c( #
      -0.7, -0.5, -0.3, 1.0,#
       0.7, -0.5, -0.3, 1.0,#
       0.7,  1, -0.3, 1.0,#
      -0.7,  1, -0.3, 1.0#
  				)#
  indices <- c( 1, 2, 3, 4 )#
 wire3d( qmesh3d(vertices,indices), lit=F )#
	}#
if(hspin)#
   play3d(spin3d(axis=c(0,0,1), rpm=20), duration=3)#
#
if(vspin)#
   play3d(spin3d(axis=c(1,0,0), rpm=20), duration=3)#
#
}
ttvol <- function(tcsres){#
#
vol <- t(convhulln(tcsres$tcs[,c('x','y','z')],options='FA')$hull)#
#
coords <- tcsres$tcs[,c('x','y','z')]#
#
listvol <- split(vol, rep(1:ncol(vol), each = nrow(vol)))#
#
ppairs <- do.call(rbind,lapply(listvol,function(x)t(combn(x,2))))#
#
for(i in 1:nrow(ppairs)){#
segments3d(coords[ppairs[i,],'x'], coords[ppairs[i,],'y'],coords[ppairs[i,],'z'])#
}#
#
rgl.triangles(coords[vol,1],coords[vol,2],coords[vol,3], alpha=0.2)#
#
}
tetraplot(a, new=T,hspin=F, size=0.02)
tetraplot<- function(tcsres, size=0.02, col='black', new=T, hspin=T, vspin=F, floor=T) {#
#
if(new)#
   open3d(FOV=1, mouseMode=c('zAxis','yAxis','zoom'))#
#
# can't figure out how to change the character type#
#
ttv=pavo::ttvertex#
#
cu=t(col2rgb('#984EA3'))/255#
cs=t(col2rgb('#377EB8'))/255#
cm=t(col2rgb('#4DAF4A'))/255#
cl=t(col2rgb('#E41A1C'))/255#
#
plot3d(unlist(ttv[c('xu','xs','xm','xl')]),#
		unlist(ttv[c('yu','ys','ym','yl')]),#
		unlist(ttv[c('zu','zs','zm','zl')]), type='s', lit=F,#
		radius=0.02, box=F, axes=F, xlab='',ylab='',zlab='',#
		col=c(rgb(cu[1],cu[2],cu[3]), rgb(cs[1],cs[2],cs[3]), #
		rgb(cm[1],cm[2],cm[3]), rgb(cl[1],cl[2],cl[3])))#
segments3d(ttv[c('xu','xs')], ttv[c('yu','ys')], ttv[c('zu','zs')], color='lightgrey')#
segments3d(ttv[c('xu','xm')], ttv[c('yu','ym')], ttv[c('zu','zm')], color='lightgrey')#
segments3d(ttv[c('xu','xl')], ttv[c('yu','yl')], ttv[c('zu','zl')], color='lightgrey')#
segments3d(ttv[c('xs','xm')], ttv[c('ys','ym')], ttv[c('zs','zm')], color='lightgrey')#
segments3d(ttv[c('xs','xl')], ttv[c('ys','yl')], ttv[c('zs','zl')], color='lightgrey')#
segments3d(ttv[c('xl','xm')], ttv[c('yl','ym')], ttv[c('zl','zm')], color='lightgrey')#
#
spheres3d(0,0,0,col='grey', radius=0.01, lit=F)#
#
spheres3d(tcsres$tcs[,c('x','y','z')], radius=size, color=col, lit=F)#
#
if(floor){#
  vertices <- c( #
      -0.7, -0.5, -0.3, 1.0,#
       0.7, -0.5, -0.3, 1.0,#
       0.7,  1, -0.3, 1.0,#
      -0.7,  1, -0.3, 1.0#
  				)#
  indices <- c( 1, 2, 3, 4 )#
 wire3d( qmesh3d(vertices,indices), lit=F )#
	}#
if(hspin)#
   play3d(spin3d(axis=c(0,0,1), rpm=20), duration=3)#
#
if(vspin)#
   play3d(spin3d(axis=c(1,0,0), rpm=20), duration=3)#
#
}
tetraplot(a, new=T,hspin=F, size=0.02)
ttvol <- function(tcsres){#
#
vol <- t(convhulln(tcsres$tcs[,c('x','y','z')],options='FA')$hull)#
#
coords <- tcsres$tcs[,c('x','y','z')]#
#
listvol <- split(vol, rep(1:ncol(vol), each = nrow(vol)))#
#
ppairs <- do.call(rbind,lapply(listvol,function(x)t(combn(x,2))))#
#
for(i in 1:nrow(ppairs)){#
segments3d(coords[ppairs[i,],'x'], coords[ppairs[i,],'y'],coords[ppairs[i,],'z'])#
}#
#
rgl.triangles(coords[vol,1],coords[vol,2],coords[vol,3], alpha=0.2)#
#
}
ttvol(a)
rgl.postscript('testplot.pdf',fmt='pdf')
?rgl.postscript
tetraplot(a, new=T,hspin=F, size=0.02)
ttvol(a)
rgl.postscript('testplot.ps',fmt='ps')
rgl.postscript('testplot.tex',fmt='tex')
rgl.postscript('testplot.svg',fmt='svg')
rgl.postscript('testplot.pgf',fmt='pgf')
tetraplot(a, new=T,hspin=F, size=0.02)
view3d( theta = 0, phi = 15)
view3d( theta = 10, phi = 15)
view3d( theta = 0, phi = 15)
view3d( theta = 0, phi = 0)
view3d( theta = 0, phi = -10)
view3d( theta = 0, phi = -20)
view3d( theta = 0, phi = -30)
view3d( theta = 0, phi = -40)
view3d( theta = 0, phi = -50)
view3d( theta = 0, phi = -80)
view3d( theta = 0, phi = -100)
view3d( theta = 0, phi = 90)
view3d( theta = 0, phi = -90)
view3d( theta = 0, phi = -80)
view3d( theta = 10, phi = -80)
view3d( theta = -10, phi = -80)
view3d( theta = 0, phi = -80)
?view3d()
view3d( theta = 0, phi = -80,fov=10)
view3d( theta = 0, phi = -80,fov=20)
view3d( theta = 0, phi = -80,fov=50)
view3d( theta = 10, phi = -80,fov=50)
view3d( theta = 10, phi = -90,fov=50)
view3d( theta = 0, phi = -90,fov=50)
view3d( theta = 0, phi = -90,fov=1)
view3d( theta = 0, phi = -90,fov=2)
view3d( theta = 0, phi = -90,fov=5)
view3d( theta = 0, phi = -90,fov=1-)
view3d( theta = 0, phi = -90,fov=10)
view3d( theta = 0, phi = -90,fov=50)
?view3d
a <- list(tcs=data.frame(matrix(rnorm(60,0,0.1),ncol=3)))#
names(a[[1]]) <- c('x','y','z')#
#
tetraplot(a, new=F,hspin=F, size=0.02)#
ttvol(a)
tetraplot(a, new=F,hspin=F, size=0.01)
ttvol(a)
sicalis=getspec('~/Desktop/Spectrofotometria/Dados Tab Delimited Files', decimal=',',subdir=T)
names(sicalis)
grep('^[0-9].........',names(sicalis))
length(grep('^[0-9].........',names(sicalis)))
gsub('^[0-9].........','',names(sicalis))
gsub('^[0-9]........','',names(sicalis))
names(sicalis)=gsub('^[0-9]........','',names(sicalis))
names(sicalis)
head(sicalis)
sicalis=getspec('~/Desktop/Spectrofotometria/Dados Tab Delimited Files',subdir=T)
names(sicalis)=gsub('^[0-9]........','',names(sicalis))
names(sicalis)
head(sicalis)
(length(names(sicalis))-1)/3
head(agg(sicalis,by=3))
agg(sicalis,by=3)
agg
agg = function (data, by, FXN = mean) #
{#
    wl_index <- which(names(data) == "wl")#
    if (length(wl_index > 0)) {#
        wl <- data[, wl_index]#
        y <- data[, -wl_index]#
    }#
    else {#
        y <- data#
    }#
    by0 <- by#
    if (length(by) == 1) {#
        by0 <- names(y)[seq(1, length(names(y)), by = by)]#
        by <- rep(1:(length(y)/by), each = by)#
    }#
    if (dim(y)[2] != length(by)) #
        stop(paste("\n", dQuote(deparse(substitute(by))), "is not of same length as columns in", #
            dQuote(deparse(substitute(data)))))#
    by <- factor(by)#
    dat <- sapply(levels(by), function(z) apply(y[which(by == #
        z)], 1, FXN))#
    colnames(dat) <- unique(by0)#
    res <- data.frame(cbind(wl = wl, dat))#
    class(res) <- c("spec", "data.frame")#
}
agg = function (data, by, FXN = mean) #
{#
    wl_index <- which(names(data) == "wl")#
    if (length(wl_index > 0)) {#
        wl <- data[, wl_index]#
        y <- data[, -wl_index]#
    }#
    else {#
        y <- data#
    }#
    by0 <- by#
    if (length(by) == 1) {#
        by0 <- names(y)[seq(1, length(names(y)), by = by)]#
        by <- rep(1:(length(y)/by), each = by)#
    }#
    if (dim(y)[2] != length(by)) #
        stop(paste("\n", dQuote(deparse(substitute(by))), "is not of same length as columns in", #
            dQuote(deparse(substitute(data)))))#
    by <- factor(by)#
    dat <- sapply(levels(by), function(z) apply(y[which(by == #
        z)], 1, FXN))#
    colnames(dat) <- unique(by0)#
    res <- data.frame(cbind(wl = wl, dat))#
    class(res) <- c("spec", "data.frame")#
    res#
}
head(agg(sicalis,by=3))
getspec
sicalis=getspec('~/Desktop/Spectrofotometria/Dados Tab Delimited Files',subdir=T, negative='min')
names(sicalis)=gsub('^[0-9]........','',names(sicalis))
head(agg(sicalis,by=3))
sicalis=agg(sicalis,by=3)
head(sicalis)
gsub('..$','',names(sicalis))
gsub('.[0-9]$','',names(sicalis))
names(sicalis)=gsub('.[0-9]$','',names(sicalis))
for(i in 2:length(names(sicalis))){
plot(-1,-1,xlim=c(300,700),ylim=c(0,100))
for(i in 2:length(names(sicalis))){
lines(sicalis[,i]~sicalis$wl)}
plot(-1,-1,xlim=c(300,700),ylim=c(0,40))
for(i in 2:length(names(sicalis))){
lines(sicalis[,i]~sicalis$wl)}
save(sicalis,file='sicalis.rda')
names(sicalis)
gsub('G$','T',names(sicalis))
names(sicalis)=gsub('G$','T',names(sicalis))
names(sicalis)=gsub('P$','B',names(sicalis))
save(sicalis,file='sicalis.rda')
require(roxygen)
require(roxygen2)
roxygenize('~/github/pavo')
roxygenize('~/github/pavo')
install.packages('~/github/pavo',repos=NULL,type='source')
roxygenize('~/github/pavo')
install.packages('~/github/pavo',repos=NULL,type='source')
detach(packages:pavo)
detach('packages:pavo')
detach('packages::pavo')
detach('package:pavo')
require(pavo)
