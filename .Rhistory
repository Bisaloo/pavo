tmp[1,]
head(tmp)
spec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/humansensitivity.csv")  		# need to put this into data bundleP1 <- Y2 - min(Y2)P2 <- P1/max(P1)X <- sum(sens[1:401,10]*P2)Y <- sum(sens[1:401,11]*P2)Z <- sum(sens[1:401,9]*P2)xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)rgb[rgb<0] <- 0rgb[rgb>1] <- 1rgb <- t(rgb)}
rgb(spec2rgb(spec2[20,]))
spec2[2,]
plot(spec1[,2], col=rgb(spec2rgb(spec1[,2]])))
spec1[,2]
sens
plot(sens[,2]~sens[,1])
plot(sens[,2]~sens[,1], type='l')
lines(sens[,3]~sens[,1])
lines(sens[,4]~sens[,1])
spectrum --> rgbspec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/humansensitivity.csv")  		# need to put this into data bundleP1 <- Y2 - min(Y2)P2 <- P1 / max(P1)X <- sum(sens[1:401, 10] * P2)Y <- sum(sens[1:401, 11] * P2)Z <- sum(sens[1:401, 9] * P2)xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?rgb <- xyzmat %*% matrix(c(X, Y, Z) / sum(X, Y, Z), ncol = 1)rgb[rgb<0] <- 0rgb[rgb>1] <- 1rgb <- t(rgb)}
Y <- spec2[2,]
plot(Y~wl)
plot(Y~c(300:700))
plot(Y~c(300:700), type='l)
plot(Y~c(300:700), type='l')
Y - min(Y)
plot(Y-min(Y))
plot((Y-min(Y))/max(Y-min(Y)))
plot((Y-min(Y))/max(Y-min(Y)), type='l')
P2 <- (Y-min(Y))/max(Y-min(Y))
plot(P2, type='l')
P2*sens[,2]
lines(P2*sens[,2])
lines(P2*sens[,3])
lines(P2*sens[,4])
spectrum --> rgbspec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/humansensitivity.csv")  		# need to put this into data bundleP1 <- Y2 - min(Y2)P2 <- P1 / max(P1)X <- sum(sens[1:401, 10] * P2)Y <- sum(sens[1:401, 11] * P2)Z <- sum(sens[1:401, 9] * P2)xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)rgb[rgb < 0] <- 0rgb[rgb > 1] <- 1rgb <- t(rgb)}
plot(spec1[,2], col=rgb(spec2rgb(spec1[,2])))
plot(spec1[2,], col=rgb(spec2rgb(spec1[,2])))
plot(spec1[,2], col=rgb(spec2rgb(spec2[2,])))
spectrum --> rgbspec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/humansensitivity.csv")  		# need to put this into data bundleP1 <- Y2 - min(Y2)P2 <- P1 / max(P1)X <- sum(sens[1:401, 10] * P2)Y <- sum(sens[1:401, 11] * P2)Z <- sum(sens[1:401, 9] * P2)xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)#rgb[rgb < 0] <- 0#rgb[rgb > 1] <- 1rgb <- t(rgb)}head(spec2)plot(spec2[2,], col=rgb(spec2rgb(spec2[2,])))
plot(spec2[2,], col=rgb(spec2rgb(spec2[2,])))
sens <- read.csv("/Users/chad/Documents/pavo/R_temp/humansensitivity.csv")
Y2 <- spec2[2,]
P1 <- Y2 - min(Y2)
P2 <- P1 / max(P1)
X <- sum(sens[1:401, 10] * P2)
Y <- sum(sens[1:401, 11] * P2)
Z <- sum(sens[1:401, 9] * P2)
rgb <- t(rgb)
xyzmat
spec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/humansensitivity.csv")  		# need to put this into data bundleP1 <- Y2 - min(Y2)P2 <- P1 / max(P1)X <- sum(sens[, 2] * P2)Y <- sum(sens[, 3] * P2)Z <- sum(sens[, 4] * P2)xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)#rgb[rgb < 0] <- 0#rgb[rgb > 1] <- 1rgb <- t(rgb)rgb}plot(spec2[2,], col=rgb(spec2rgb(spec2[2,])))
spectrum --> rgbspec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/humansensitivity.csv")  		# need to put this into data bundleP1 <- Y2 - min(Y2)P2 <- P1 / max(P1)X <- sum(sens[, 2] * P2)Y <- sum(sens[, 3] * P2)Z <- sum(sens[, 4] * P2)xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)rgb[rgb < 0] <- 0rgb[rgb > 1] <- 1rgb <- t(rgb)rgb}plot(spec2[2,], col=rgb(spec2rgb(spec2[2,])))
plot(spec2[2,]~wl, col=rgb(spec2rgb(spec2[2,])))
plot(spec2[2,]~c(300:700), col=rgb(spec2rgb(spec2[2,])))
sens2 <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv")
head(sens)
sens2 <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv", row.names=F)
sens2 <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv", rownames=F)
sens2 <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv", rownames=1)
sens2 <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv", row.names=1)
head(sens2)
sens <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv", row.names=1)
spectrum --> rgbspec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv", row.names=1)  		# need to put this into data bundleP1 <- Y2 - min(Y2)P2 <- P1 / max(P1)X <- sum(sens[, 9] * P2)Y <- sum(sens[, 10] * P2)Z <- sum(sens[, 11] * P2)xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)rgb[rgb < 0] <- 0rgb[rgb > 1] <- 1rgb <- t(rgb)rgb}plot(spec2[2,]~c(300:700), col=rgb(spec2rgb(spec2[2,])), type='l', lwd=3)
dim(spec2)
spectrum --> rgbspec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv", row.names=1)  		# need to put this into data bundleP1 <- Y2 - min(Y2)P2 <- P1 / max(P1)X <- sum(sens[1:401, 9] * P2)Y <- sum(sens[1:401, 10] * P2)Z <- sum(sens[1:401, 11] * P2)xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)rgb[rgb < 0] <- 0rgb[rgb > 1] <- 1rgb <- t(rgb)rgb}plot(spec2[2,]~c(300:700), col=rgb(spec2rgb(spec2[2,])), type='l', lwd=3)
plot(spec2[3,]~c(300:700), col=rgb(spec2rgb(spec2[2,])), type='l', lwd=3)
plot(spec2[4,]~c(300:700), col=rgb(spec2rgb(spec2[2,])), type='l', lwd=3)
plot(spec2[5,]~c(300:700), col=rgb(spec2rgb(spec2[2,])), type='l', lwd=3)
plot(spec2[5,]~c(300:700), col=rgb(spec2rgb(spec2[5,])), type='l', lwd=3)
plot(spec2[5,]~c(300:700), col=rgb(spec2rgb(spec2[6,])), type='l', lwd=3)
plot(spec2[5,]~c(300:700), col=rgb(spec2rgb(spec2[7,])), type='l', lwd=3)
plot(spec2[5,]~c(300:700), col=rgb(spec2rgb(spec2[8,])), type='l', lwd=3)
plot(spec2[5,]~c(300:700), col=rgb(spec2rgb(spec2[9,])), type='l', lwd=3)
plot(spec2[5,]~c(300:700), col=rgb(spec2rgb(spec2[10,])), type='l', lwd=3)
plot(spec2[5,]~c(300:700), col=rgb(spec2rgb(spec2[11,])), type='l', lwd=3)
plot(spec2[5,]~c(300:700), col=rgb(spec2rgb(spec2[12,])), type='l', lwd=3)
plot(spec2[5,]~c(300:700), col=rgb(spec2rgb(spec2[13,])), type='l', lwd=3)
plot(spec2[5,]~c(300:700), col=rgb(spec2rgb(spec2[14,])), type='l', lwd=3)
plot(spec2[5,]~c(300:700), col=rgb(spec2rgb(spec2[20,])), type='l', lwd=3)
plot(spec2[20,]~c(300:700), col=rgb(spec2rgb(spec2[20,])), type='l', lwd=3)
plot(spec2[21,]~c(300:700), col=rgb(spec2rgb(spec2[21,])), type='l', lwd=3)
rgb(spec2rgb(spec2[21,]))
rgb2hsv(rgb(spec2rgb(spec2[21,])))
spec2rgb(spec2[21,])
rgb2hsv(spec2rgb(spec2[21,]))
rgb2hsv(t(spec2rgb(spec2[21,])))
plot(spec2[2])
plot(spec2[2,])
plot(spec2[2,], ylim=c(0,100))
plot(spec2[2,], ylim=c(0,100), type='l')
lines(spec2[20,])
class(specs)
?plot.spec
rgb2hsv(spec2rgb(spec2[2,]))
spec2rgb(spec2[20,])
spec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv", row.names=1)  	# TODO: references dataset in sys bundle#P1 <- Y2 - min(Y2)P2 <- Y2 / max(Y2)X <- sum(sens[1:401, 9] * P2)Y <- sum(sens[1:401, 10] * P2)Z <- sum(sens[1:401, 11] * P2)xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)rgb[rgb < 0] <- 0rgb[rgb > 1] <- 1rgb <- t(rgb)rgb}#
#plot(spec2[21,]~c(300:700), col=rgb(spec2rgb(spec2[21,])), type='l', lwd=3)#
# class = plot.spec
spec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv", row.names=1)  	# TODO: references dataset in sys bundle#P1 <- Y2 - min(Y2)#P2 <- Y2 / max(Y2)X <- sum(sens[1:401, 9] * P2)Y <- sum(sens[1:401, 10] * P2)Z <- sum(sens[1:401, 11] * P2)xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)rgb[rgb < 0] <- 0rgb[rgb > 1] <- 1rgb <- t(rgb)rgb}#
#plot(spec2[21,]~c(300:700), col=rgb(spec2rgb(spec2[21,])), type='l', lwd=3)#
# class = plot.spec
spec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv", row.names=1)  	# TODO: references dataset in sys bundle#P1 <- Y2 - min(Y2)#P2 <- Y2 / max(Y2)X <- sum(sens[1:401, 9] * Y2)Y <- sum(sens[1:401, 10] * Y2)Z <- sum(sens[1:401, 11] * Y2)xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)rgb[rgb < 0] <- 0rgb[rgb > 1] <- 1rgb <- t(rgb)rgb}#
#plot(spec2[21,]~c(300:700), col=rgb(spec2rgb(spec2[21,])), type='l', lwd=3)#
# class = plot.spec
rgb2hsv(t(spec2rgb(spec2[20,])))
Y2
X <- sum(sens[1:401, 9] * Y2)Y <- sum(sens[1:401, 10] * Y2)Z <- sum(sens[1:401, 11] * Y2)
P2 <- Y2 / max(Y2)
sum(X,Y,Z)
sum(X)
sum(y)
sum(Y)
sum(Z)
Y
Z
plot(Y2)
Y1 <- Y2
Y2 <- Y1 * 5
lines(Y2)
P2 <- Y2 / sum(Y2)X <- sum(sens[1:401, 9] * P2)Y <- sum(sens[1:401, 10] * P2)Z <- sum(sens[1:401, 11] * P2)
P2 <- Y2 / 100
X <- sum(sens[1:401, 9] * P2)Y <- sum(sens[1:401, 10] * P2)Z <- sum(sens[1:401, 11] * P2)
rgb <- xyzmat%*%matrix(c(X, Y, Z), ncol = 1)
rgb2hsv(rgb)
spec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv", row.names=1)  	# TODO: references dataset in sys bundle#P1 <- Y2 - min(Y2)P2 <- Y2 / 100X <- sum(sens[1:401, 9] * P2)Y <- sum(sens[1:401, 10] * P2)Z <- sum(sens[1:401, 11] * P2)xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)rgb[rgb < 0] <- 0rgb[rgb > 1] <- 1rgb <- t(rgb)}
plot(spec2[2,]~c(300:700), col=rgb(spec2rgb(spec2[2,])), type='l', lwd=3)
lines(spec2[20,]~c(300:700), col=rgb(spec2rgb(spec2[20,])), type='l', lwd=3)
lines(spec2[2,]+20~c(300:700), col=rgb(spec2rgb(spec2[2,]+20)), type='l', lwd=3)
lines(spec2[2,]+30~c(300:700), col=rgb(spec2rgb(spec2[2,]+30)), type='l', lwd=3)
lines(spec2[2,]+40~c(300:700), col=rgb(spec2rgb(spec2[2,]+40)), type='l', lwd=3)
lines(spec2[2,]+50~c(300:700), col=rgb(spec2rgb(spec2[2,]+50)), type='l', lwd=3)
lines(spec2[2,]*2~c(300:700), col=rgb(spec2rgb(spec2[2,]*2)), type='l', lwd=3)
lines(spec2[2,]*4~c(300:700), col=rgb(spec2rgb(spec2[2,]*4)), type='l', lwd=3)
c(X,Y,Z)
c(X,Y,Z)/sum(X,Y,Z)
xyzmat%*%c(X,Y,Z)/sum(X,Y,Z)
rgb(spec2rgb(spec2[2,]))
spectrum --> rgbspec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv", row.names=1)  	# TODO: references dataset in sys bundle#P1 <- Y2 - min(Y2)P2 <- Y2 / 100X <- sum(sens[1:401, 9] * P2)Y <- sum(sens[1:401, 10] * P2)Z <- sum(sens[1:401, 11] * P2)xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)rgb[rgb < 0] <- 0rgb[rgb > 1] <- 1rgb <- t(rgb)rgb}
spec2rgb(spec2[2,])
spec2rgb(spec2[2,]*2)
spec2rgb(spec2[2,]+10)
spec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv", row.names=1)  	# TODO: references dataset in sys bundleP2 <- Y2 / sum(Y2)#P2 <- Y2 / 100X <- sum(sens[1:401, 9] * P2)Y <- sum(sens[1:401, 10] * P2)Z <- sum(sens[1:401, 11] * P2)xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)rgb[rgb < 0] <- 0rgb[rgb > 1] <- 1rgb <- t(rgb)rgb}
rgb2hsv(t(spec2rgb(spec2[2,]+30)))
rgb2hsv(t(spec2rgb(spec2[2,])))
rgb2hsv(t(spec2rgb(spec2[2,]*4)))
P2 <- Y2 / sum(Y2)
P2
plot(P2)
spectrum --> rgbspec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv", row.names=1)  	# TODO: references dataset in sys bundleP2 <- Y2 / sum(Y2)#P2 <- Y2 / 100X <- sum(sens[1:401, 9] * P2)Y <- sum(sens[1:401, 10] * P2)Z <- sum(sens[1:401, 11] * P2)xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?#rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)rgb <- xyzmat%*%matrix(c(X, Y, Z), ncol = 1)rgb[rgb < 0] <- 0rgb[rgb > 1] <- 1rgb <- t(rgb)rgb}
rgb2hsv(t(spec2rgb(spec2[2,]*5)))
rgb2hsv(t(spec2rgb(spec2[2,]*2)))
rgb2hsv(t(spec2rgb(spec2[2,]*3)))
rgb2hsv(t(spec2rgb(spec2[2,]+5)))
rgb2hsv(t(spec2rgb(spec2[2,]+6)))
rgb2hsv(t(spec2rgb(spec2[2,]+7)))
rgb2hsv(t(spec2rgb(spec2[2,]+8)))
rgb2hsv(t(spec2rgb(spec2[2,]+9)))
plot(sens[,9])
plot(sens[,9]~sens[,1])
plot(sens[,9]~sens[,1], type='l')
lines(sens[,10]~sens[,1], type='l')
lines(sens[,11]~sens[,1], type='l')
spectrum --> rgbspec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv", row.names=1)  	# TODO: references dataset in sys bundleP2 <- Y2 / sum(Y2)#P2 <- Y2 / 100X <- sens[1:401, 9] * P2Y <- sens[1:401, 10] * P2Z <- sens[1:401, 11] * P2xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?#rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)rgb <- xyzmat%*%matrix(c(X, Y, Z), ncol = 1)rgb[rgb < 0] <- 0rgb[rgb > 1] <- 1rgb <- t(rgb)rgb}
spectrum --> rgbspec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv", row.names=1)  	# TODO: references dataset in sys bundleP2 <- Y2 / sum(Y2)#P2 <- Y2 / 100X <- sens[1:401, 9] * P2Y <- sens[1:401, 10] * P2Z <- sens[1:401, 11] * P2xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)#rgb <- xyzmat%*%matrix(c(X, Y, Z), ncol = 1)rgb[rgb < 0] <- 0rgb[rgb > 1] <- 1rgb <- t(rgb)rgb}
spec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv", row.names=1)  	# TODO: references dataset in sys bundle#P2 <- Y2 / sum(Y2)P2 <- Y2 / 100X <- sens[1:401, 9] * P2Y <- sens[1:401, 10] * P2Z <- sens[1:401, 11] * P2xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)#rgb <- xyzmat%*%matrix(c(X, Y, Z), ncol = 1)rgb[rgb < 0] <- 0rgb[rgb > 1] <- 1rgb <- t(rgb)rgb}
X <- sens[1:401, 9] * P2Y <- sens[1:401, 10] * P2Z <- sens[1:401, 11] * P2
X
xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?
rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)
rgb
spectrum --> rgbspec2rgb <- function(Y2) {sens <- read.csv("/Users/chad/Documents/pavo/R_temp/spec.csv", row.names=1)  	# TODO: references dataset in sys bundleP2 <- Y2 / sum(Y2)#P2 <- Y2 / 100X <- sum(sens[1:401, 9] * P2)Y <- sum(sens[1:401, 10] * P2)Z <- sum(sens[1:401, 11] * P2)xyzmat <- matrix(c(3.240479, -0.969256, 0.055648, -1.537150, 1.875992, -0.204043, -0.498535, 0.041556, 1.057311), nrow = 3)  # what is source of matrix data?rgb <- xyzmat%*%matrix(c(X, Y, Z)/sum(X, Y, Z), ncol = 1)#rgb <- xyzmat%*%matrix(c(X, Y, Z), ncol = 1)rgb[rgb < 0] <- 0rgb[rgb > 1] <- 1t(rgb)}
plot(spec2[2,]~c(300:700), col=rgb(spec2rgb(spec2[2,])), type='l', lwd=3, ylim=c(0,100))
lines(spec2[2,]*6~c(300:700), col=rgb(spec2rgb(spec2[2,]*6)), type='l', lwd=3)
lines(spec2[2,]+10~c(300:700), col=rgb(spec2rgb(spec2[2,]+10)), type='l', lwd=3)
lines(spec2[2,]+2~c(300:700), col=rgb(spec2rgb(spec2[2,]+2)), type='l', lwd=3)
lines(spec2[2,]+3~c(300:700), col=rgb(spec2rgb(spec2[2,]+3)), type='l', lwd=3)
lines(spec2[2,]+4~c(300:700), col=rgb(spec2rgb(spec2[2,]+4)), type='l', lwd=3)
lines(spec2[2,]+5~c(300:700), col=rgb(spec2rgb(spec2[2,]+5)), type='l', lwd=3)
lines(spec2[2,]+6~c(300:700), col=rgb(spec2rgb(spec2[2,]+6)), type='l', lwd=3)
rgb2hsv(t(spec2rgb(spec2[2,]+10)))
rgb2hsv(t(spec2rgb(spec2[2,]+11)))
rgb2hsv(t(spec2rgb(spec2[2,]+12)))
rgb2hsv(t(spec2rgb(spec2[2,]+13)))
rgb2hsv(t(spec2rgb(spec2[2,]+14)))
rgb2hsv(t(spec2rgb(spec2[2,]+15)))
rgb2hsv(t(spec2rgb(spec2[2,]+16)))
rgb2hsv(t(spec2rgb(spec2[2,]+17)))
rgb2hsv(t(spec2rgb(spec2[2,]+18)))
rgb2hsv(t(spec2rgb(spec2[2,]+19)))
rgb2hsv(t(spec2rgb(spec2[2,]+20)))
spec2rgb(spec2[2,]+20))
spec2rgb(spec2[2,]+20)
spec2rgb(spec2[2,]+1)
spec2rgb(spec2[2,]+2)
spec2rgb(spec2[2,]+3)
spec2rgb(spec2[2,]+4)
spec2rgb(spec2[2,]+5)
spec2rgb(spec2[2,]+6)
spec2rgb(spec2[2,]+7)
head(spec2)
wl <- spec2[2,]
wl <- spec2[1,]
varying <- seq(10, 70, by=10)
varying
col.names(specs)
names(specs)
rownames(specs)
colnames(specs)
ncol(specs)
sapply(1:ncol(specs), function(z){approx(x=varying, y=specs[,i], eval=100)$y})
sapply(1:ncol(specs), function(z){approx(x=varying, y=specs[,i])$y})
sapply(1:ncol(specs), function(z){approx(x=varying, y=specs[,i], n=100)$y})
approx(varying)
approx(varying)$y
approx(varying, n=15)$y
Make heat maps for hollow speciesheatplot <- function(specs, varying) {require(RColorBrewer)jet.colors <- colorRampPalette(rev(brewer.pal(10, "Spectral")))specs <- specs[-1, ]dat <- sapply(1:ncol(specs), function(z){approx(x=varying, y=specs[,i], n=100)$y})image(x=wl, y=approx(varying, n=100)$y, z = dat, col = jet.colors(150), useRaster=T)}
heatplot(spec2[1:8,])
heatplot(spec2[1:8,], varying=seq(10,80,by=10))
heatplot(spec2[1:8,], varying=seq(10,70,by=10))
z
specs <- spec2[1:8,]
wl <- specs[1, ]
wl
specs <- spec2[2:8,]
head(specs)
varing <- seq(10, 60, by=10)
dat <- sapply(1:ncol(specs), function(z){approx(x=varying, y=specs[,i], n=100)$y})
image(x=wl, y=approx(varying, n=100)$y, z=dat, useRaster=T)
dim(dat)
image(y=wl, x=approx(varying, n=100)$y, z=dat, useRaster=T)
Make heat maps for hollow speciesheatplot <- function(specs, varying) {require(RColorBrewer)jet.colors <- colorRampPalette(rev(brewer.pal(10, "Spectral")))wl <- specs[1, ]specs <- specs[-1, ]dat <- sapply(1:ncol(specs), function(z){approx(x=varying, y=specs[,i], n=100)$y})image(y=wl, x=approx(varying, n=100)$y, z=dat, useRaster=T)}
heatplot(spec2[1:8, ], varying=seq(10, 70, by=10))
heatplot(spec2[1:4, ], varying=seq(10, 70, by=10))
c(10,15,25,50)
approx(c(10,15,25,50), n=50)$y
plot(approx(c(10,15,25,50), n=50)$y)
witu <- getspec("~/Documents/School/PhD/Projects/Hollow PC/data/spectra/2011-11-30", ext="ttt")
names(witu)
heatplot(t(witu[1:9, ]), varying=seq(10, 80, by=10))
plot(witu[,2])
plot(witu[,3])
plot(witu[,4])
plot(witu[,5])
plot(witu[,6])
plot(witu[,7])
head(t(witu))
Make heat maps for hollow speciesheatplot <- function(specs, varying) {	wl <- specs[1, ]	specs <- specs[-1, ]	dat <- sapply(1:ncol(specs), function(z){approx(x=varying, y=specs[,z], n=100)$y})	image(y=wl, x=approx(varying, n=100)$y, z=dat, useRaster=T)}
Make heat maps for hollow speciesheatplot <- function(specs, varying) {	wl <- specs[1, ]	specs <- specs[-1, ]	dat <- sapply(1:ncol(specs), function(z){approx(x=varying, y=specs[,z], n=100)$y})	image(x=wl, y=approx(varying, n=100)$y, z=t(dat), useRaster=T)}
heatplot(spec2[1:4, ], varying=seq(10, 30, by=10))
heatplot(t(witu[, 1:9]), varying=c(10,20,30,40,50,60,70,80))
approx(c(10,20,25,30,31,60,70,80), n=100)$y
approx(c(10,20,25,30,31,60,70,80), n=10)$y
Make heat maps for hollow speciesheatplot <- function(specs, varying) {	wl <- specs[1, ]	specs <- specs[-1, ]	dat <- sapply(1:ncol(specs), function(z){approx(x=varying, y=specs[,z], n=100)$y})	image(x=wl, y=approx(varying, n=100)$y, z=t(dat))}
heatplot(t(witu[, 1:9]), varying=c(10,20,25,30,31,60,70,80))
heatplot(t(log(witu[, 1:9])), varying=c(10,20,25,30,31,60,70,80))
heatplot(t(log(witu[, 1:9])), varying=seq(10, 80, by=10))
Make heat maps for hollow speciesheatplot <- function(specs, varying, col=heat.colors(25)) {	wl <- specs[1, ]	specs <- specs[-1, ]	dat <- sapply(1:ncol(specs), function(z){approx(x=varying, y=specs[,z], n=100)$y})	image(x=wl, y=approx(varying, n=100)$y, z=t(dat), col=col)}
heatplot(t(witu[, 1:9]), varying=seq(10, 80, by=10))
heatplot(t(witu[, 1:9]), varying=seq(10, 80, by=10), col=rainbow(100))
heatplot(t(witu[, 1:9]), varying=seq(10, 80, by=10), col=rainbow(25))
Make heat maps for hollow speciesheatplot <- function(specs, varying, col=heat.colors(25)) {wl <- specs[1, ]specs <- specs[-1, ]dat <- sapply(1:ncol(specs), function(z){approx(x=varying, y=specs[,z], n=100)$y})image(x=wl, y=approx(varying, n=100)$y, z=t(dat), col=col)}heatplot(t(witu[, 1:9]), varying=seq(10, 80, by=10), col=rainbow(25))
heatplot(t(witu[, 1:9]), varying=seq(10, 80, by=10), col=grey.colors(25))
heatplot(t(witu[, 1:9]), varying=seq(10, 80, by=10), col=grey.colors(25, start=0))
